{
    "abi": [
        {
            "members": [
                {
                    "name": "index",
                    "offset": 0,
                    "type": "felt"
                },
                {
                    "name": "values",
                    "offset": 1,
                    "type": "(x: felt, y: felt)"
                }
            ],
            "name": "IndexAndValues",
            "size": 3,
            "type": "struct"
        },
        {
            "inputs": [
                {
                    "name": "address",
                    "type": "felt"
                },
                {
                    "name": "value",
                    "type": "felt"
                }
            ],
            "name": "constructor",
            "outputs": [],
            "type": "constructor"
        },
        {
            "inputs": [],
            "name": "without_arg",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "num",
                    "type": "felt"
                }
            ],
            "name": "with_arg",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "num",
                    "type": "felt"
                }
            ],
            "name": "return_result",
            "outputs": [
                {
                    "name": "result",
                    "type": "felt"
                }
            ],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "x",
                    "type": "felt"
                },
                {
                    "name": "y",
                    "type": "felt"
                }
            ],
            "name": "bitwise_and",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "value",
                    "type": "felt"
                }
            ],
            "name": "sqrt",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "address",
                    "type": "felt"
                },
                {
                    "name": "value",
                    "type": "felt"
                }
            ],
            "name": "test_storage_read_write",
            "outputs": [
                {
                    "name": "result",
                    "type": "felt"
                }
            ],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "n_writes",
                    "type": "felt"
                },
                {
                    "name": "value",
                    "type": "felt"
                }
            ],
            "name": "write_a_lot",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "address",
                    "type": "felt"
                },
                {
                    "name": "value",
                    "type": "felt"
                }
            ],
            "name": "write_and_revert",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [],
            "name": "test_long_retdata",
            "outputs": [
                {
                    "name": "a",
                    "type": "felt"
                },
                {
                    "name": "b",
                    "type": "felt"
                },
                {
                    "name": "c",
                    "type": "felt"
                },
                {
                    "name": "d",
                    "type": "felt"
                },
                {
                    "name": "e",
                    "type": "felt"
                }
            ],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "class_hash",
                    "type": "felt"
                },
                {
                    "name": "selector",
                    "type": "felt"
                },
                {
                    "name": "calldata_len",
                    "type": "felt"
                },
                {
                    "name": "calldata",
                    "type": "felt*"
                }
            ],
            "name": "test_library_call",
            "outputs": [
                {
                    "name": "retdata_size",
                    "type": "felt"
                },
                {
                    "name": "retdata",
                    "type": "felt*"
                }
            ],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "class_hash",
                    "type": "felt"
                },
                {
                    "name": "lib_selector",
                    "type": "felt"
                },
                {
                    "name": "nested_selector",
                    "type": "felt"
                },
                {
                    "name": "calldata_len",
                    "type": "felt"
                },
                {
                    "name": "calldata",
                    "type": "felt*"
                }
            ],
            "name": "test_nested_library_call",
            "outputs": [
                {
                    "name": "result",
                    "type": "felt"
                }
            ],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "contract_address",
                    "type": "felt"
                },
                {
                    "name": "function_selector",
                    "type": "felt"
                },
                {
                    "name": "calldata_len",
                    "type": "felt"
                },
                {
                    "name": "calldata",
                    "type": "felt*"
                }
            ],
            "name": "test_call_contract",
            "outputs": [
                {
                    "name": "retdata_size",
                    "type": "felt"
                },
                {
                    "name": "retdata",
                    "type": "felt*"
                }
            ],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "class_hash",
                    "type": "felt"
                }
            ],
            "name": "test_replace_class",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "class_hash",
                    "type": "felt"
                },
                {
                    "name": "contract_address_salt",
                    "type": "felt"
                },
                {
                    "name": "constructor_calldata_len",
                    "type": "felt"
                },
                {
                    "name": "constructor_calldata",
                    "type": "felt*"
                },
                {
                    "name": "deploy_from_zero",
                    "type": "felt"
                }
            ],
            "name": "test_deploy",
            "outputs": [
                {
                    "name": "contract_address",
                    "type": "felt"
                }
            ],
            "type": "function"
        },
        {
            "inputs": [],
            "name": "test_storage_var",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "salt",
                    "type": "felt"
                },
                {
                    "name": "class_hash",
                    "type": "felt"
                },
                {
                    "name": "constructor_calldata_len",
                    "type": "felt"
                },
                {
                    "name": "constructor_calldata",
                    "type": "felt*"
                },
                {
                    "name": "deployer_address",
                    "type": "felt"
                }
            ],
            "name": "test_contract_address",
            "outputs": [
                {
                    "name": "contract_address",
                    "type": "felt"
                }
            ],
            "type": "function"
        },
        {
            "inputs": [],
            "name": "foo",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "depth",
                    "type": "felt"
                }
            ],
            "name": "recursive_fail",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "depth",
                    "type": "felt"
                }
            ],
            "name": "recurse",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "contract_address",
                    "type": "felt"
                },
                {
                    "name": "function_selector",
                    "type": "felt"
                },
                {
                    "name": "depth",
                    "type": "felt"
                }
            ],
            "name": "recursive_syscall",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "key",
                    "type": "felt"
                },
                {
                    "name": "value",
                    "type": "felt"
                },
                {
                    "name": "to",
                    "type": "felt"
                },
                {
                    "name": "amount",
                    "type": "felt"
                },
                {
                    "name": "fee_token_address",
                    "type": "felt"
                }
            ],
            "name": "test_write_and_transfer",
            "outputs": [
                {
                    "name": "retdata_len",
                    "type": "felt"
                },
                {
                    "name": "retdata",
                    "type": "felt*"
                }
            ],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "expected_block_number",
                    "type": "felt"
                }
            ],
            "name": "test_get_block_number",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "expected_block_timestamp",
                    "type": "felt"
                }
            ],
            "name": "test_get_block_timestamp",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "expected_sequencer_address",
                    "type": "felt"
                }
            ],
            "name": "test_get_sequencer_address",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "expected_version",
                    "type": "felt"
                },
                {
                    "name": "expected_account_contract_address",
                    "type": "felt"
                },
                {
                    "name": "expected_max_fee",
                    "type": "felt"
                },
                {
                    "name": "expected_transaction_hash",
                    "type": "felt"
                },
                {
                    "name": "expected_chain_id",
                    "type": "felt"
                },
                {
                    "name": "expected_nonce",
                    "type": "felt"
                }
            ],
            "name": "test_get_tx_info",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "expected_version",
                    "type": "felt"
                }
            ],
            "name": "test_tx_version",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [],
            "name": "test_count_actual_storage_changes",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "index",
                    "type": "felt"
                },
                {
                    "name": "diff_0",
                    "type": "felt"
                },
                {
                    "name": "diff_1",
                    "type": "felt"
                }
            ],
            "name": "advance_counter",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "index_and_x",
                    "type": "IndexAndValues"
                }
            ],
            "name": "xor_counters",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "address",
                    "type": "felt"
                },
                {
                    "name": "index_and_x",
                    "type": "IndexAndValues"
                }
            ],
            "name": "call_xor_counters",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [],
            "name": "test_ec_op",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "index",
                    "type": "felt"
                }
            ],
            "name": "add_signature_to_counters",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "to_address",
                    "type": "felt"
                }
            ],
            "name": "send_message",
            "outputs": [],
            "type": "function"
        }
    ],
    "entry_points_by_type": {
        "CONSTRUCTOR": [
            {
                "offset": 464,
                "selector": "0x28ffe4ff0f226a9107253e17a904099aa4f63a02a5621de0576e5aa71bc5194"
            }
        ],
        "EXTERNAL": [
            {
                "offset": 1096,
                "selector": "0x1143aa89c8e3ebf8ed14df2a3606c1cd2dd513fac8040b0f8ab441f5c52fe4"
            },
            {
                "offset": 1158,
                "selector": "0x600c98a299d72ef1e09a2e1503206fbc76081233172c65f7e2438ef0069d8d"
            },
            {
                "offset": 1672,
                "selector": "0x679c22735055a10db4f275395763a3752a1e3a3043c192299ab6b574fba8d6"
            },
            {
                "offset": 1596,
                "selector": "0x7772be8b80a8a33dc6c1f9a6ab820c02e537c73e859de67f288c70f92571bb"
            },
            {
                "offset": 554,
                "selector": "0xad451bd0dba3d8d97104e1bfc474f88605ccc7acbe1c846839a120fdf30d95"
            },
            {
                "offset": 1422,
                "selector": "0xd47144c49bce05b6de6bce9d5ff0cc8da9420f8945453e20ef779cbea13ad4"
            },
            {
                "offset": 887,
                "selector": "0xe7510edcf6e9f1b70f7bd1f488767b50f0363422f3c563160ab77adf62467b"
            },
            {
                "offset": 501,
                "selector": "0xe7def693d16806ca2a2f398d8de5951344663ba77f340ed7a958da731872fc"
            },
            {
                "offset": 722,
                "selector": "0x120c24672855cfe872cb35256ea85172417f2aada7a22c15908906dc5f3c69d"
            },
            {
                "offset": 1389,
                "selector": "0x127a04cfe41aceb22fc022bce0c5c70f2d860a7c7c054681bd821cdc18e6dbc"
            },
            {
                "offset": 1749,
                "selector": "0x12ead94ae9d3f9d2bdb6b847cf255f1f398193a1f88884a0ae8e18f24a037b6"
            },
            {
                "offset": 579,
                "selector": "0x137a07fa9c479e27114b8ae1fbf252f2065cf91a0d8615272e060a7ccf37309"
            },
            {
                "offset": 1280,
                "selector": "0x167ac610845cc0ab1501b38169a7e50f1bf60602d3c2a961b30987454f97812"
            },
            {
                "offset": 923,
                "selector": "0x169f135eddda5ab51886052d777a57f2ea9c162d713691b5e04a6d4ed71d47f"
            },
            {
                "offset": 1713,
                "selector": "0x1ae1a515cf2d214b29bdf63a79ee2d490efd4dd1acc99d383a8e549c3cecb5d"
            },
            {
                "offset": 1045,
                "selector": "0x1b1a0649752af1b28b3dc29a1556eee781e4a4c3a1f7f53f90fa834de098c4d"
            },
            {
                "offset": 679,
                "selector": "0x1b47f727a0668d8593c5bb115d5b53a470f29833fd4d598e748f68e65f4f003"
            },
            {
                "offset": 1359,
                "selector": "0x1de4779362d5ca708d55fe1d4d499501b7f692730d2e01656e9180708985e07"
            },
            {
                "offset": 856,
                "selector": "0x27c3334165536f239cfd400ed956eabff55fc60de4fb56728b6a4f6b87db01c"
            },
            {
                "offset": 1225,
                "selector": "0x309687d54611a7db521175c78ba48b082df1372350d2529981a8c0dd09a6529"
            },
            {
                "offset": 1628,
                "selector": "0x30f842021fbf02caf80d09a113997c1e00a32870eee0c6136bed27acb348bea"
            },
            {
                "offset": 1548,
                "selector": "0x317eb442b72a9fae758d4fb26830ed0d9f31c8e7da4dbff4e8c59ea6a158e7f"
            },
            {
                "offset": 649,
                "selector": "0x3307b3297ab2ab7a46a9b7d139a52dddf9c343e9a0a3ac69c5b4048d80e3aaf"
            },
            {
                "offset": 1304,
                "selector": "0x33ce93a3eececa5c9fc70da05f4aff3b00e1820b79587924d514bc76788991a"
            },
            {
                "offset": 744,
                "selector": "0x3604cea1cdb094a73a31144f14a3e5861613c008e1e879939ebc4827d10cd50"
            },
            {
                "offset": 975,
                "selector": "0x36fa6de2810d05c3e1a0ebe23f60b9c2f4629bbead09e5a9704e1c5632630d5"
            },
            {
                "offset": 1011,
                "selector": "0x38215592552d97419658d30db8f189b242ec2056641de3dff8a7217745ec205"
            },
            {
                "offset": 484,
                "selector": "0x382a967a31be13f23e23a5345f7a89b0362cc157d6fbe7564e6396a83cf4b4f"
            },
            {
                "offset": 529,
                "selector": "0x39a1491f76903a16feed0a6433bec78de4c73194944e1118e226820ad479701"
            },
            {
                "offset": 817,
                "selector": "0x3a6a8bae4c51d5959683ae246347ffdd96aa5b2bfa68cc8c3a6a7c2ed0be331"
            },
            {
                "offset": 615,
                "selector": "0x3b097c62d3e4b85742aadd0dfb823f96134b886ec13bda57b68faf86f294d97"
            },
            {
                "offset": 1256,
                "selector": "0x3dc5da2d6d1275aeed57f43461d31967b0fed58bfe739b4ffad4091e89c4b03"
            },
            {
                "offset": 1071,
                "selector": "0x3eb640b15f75fcc06d43182cdb94ed38c8e71755d5fb57c16dd673b466db1d4"
            }
        ],
        "L1_HANDLER": []
    },
    "program": {
        "attributes": [],
        "builtins": [
            "pedersen",
            "range_check",
            "bitwise",
            "ec_op"
        ],
        "compiler_version": "0.12.2",
        "data": [
            "0x40780017fff7fff",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x400380007ffb7ffc",
            "0x400380017ffb7ffd",
            "0x482680017ffb8000",
            "0x3",
            "0x480280027ffb8000",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffd",
            "0x3",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480080007fff8000",
            "0x400080007ffd7fff",
            "0x482480017ffd8001",
            "0x1",
            "0x482480017ffd8001",
            "0x1",
            "0xa0680017fff7ffe",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffb",
            "0x402a7ffc7ffd7fff",
            "0x208b7fff7fff7ffe",
            "0x208b7fff7fff7ffe",
            "0x1104800180018000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x482480017ffe8000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffff",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x43616c6c436f6e7472616374",
            "0x400280007ff97fff",
            "0x400380017ff97ffa",
            "0x400380027ff97ffb",
            "0x400380037ff97ffc",
            "0x400380047ff97ffd",
            "0x482680017ff98000",
            "0x7",
            "0x480280057ff98000",
            "0x480280067ff98000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x4c69627261727943616c6c",
            "0x400280007ff97fff",
            "0x400380017ff97ffa",
            "0x400380027ff97ffb",
            "0x400380037ff97ffc",
            "0x400380047ff97ffd",
            "0x482680017ff98000",
            "0x7",
            "0x480280057ff98000",
            "0x480280067ff98000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x4465706c6f79",
            "0x400280007ff87fff",
            "0x400380017ff87ff9",
            "0x400380027ff87ffa",
            "0x400380037ff87ffb",
            "0x400380047ff87ffc",
            "0x400380057ff87ffd",
            "0x482680017ff88000",
            "0x9",
            "0x480280067ff88000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x47657443616c6c657241646472657373",
            "0x400280007ffd7fff",
            "0x482680017ffd8000",
            "0x2",
            "0x480280017ffd8000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x47657453657175656e63657241646472657373",
            "0x400280007ffd7fff",
            "0x482680017ffd8000",
            "0x2",
            "0x480280017ffd8000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x476574426c6f636b4e756d626572",
            "0x400280007ffd7fff",
            "0x482680017ffd8000",
            "0x2",
            "0x480280017ffd8000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x476574426c6f636b54696d657374616d70",
            "0x400280007ffd7fff",
            "0x482680017ffd8000",
            "0x2",
            "0x480280017ffd8000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x47657454785369676e6174757265",
            "0x400280007ffd7fff",
            "0x482680017ffd8000",
            "0x3",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x53746f7261676552656164",
            "0x400280007ffc7fff",
            "0x400380017ffc7ffd",
            "0x482680017ffc8000",
            "0x3",
            "0x480280027ffc8000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x53746f726167655772697465",
            "0x400280007ffb7fff",
            "0x400380017ffb7ffc",
            "0x400380027ffb7ffd",
            "0x482680017ffb8000",
            "0x3",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x4765745478496e666f",
            "0x400280007ffd7fff",
            "0x482680017ffd8000",
            "0x2",
            "0x480280017ffd8000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x5265706c616365436c617373",
            "0x400280007ffc7fff",
            "0x400380017ffc7ffd",
            "0x482680017ffc8000",
            "0x2",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x3ffffffffffffffffffffffffffffff",
            "0x480280017ffc8000",
            "0x48307fff80007ffe",
            "0x400280027ffc7fff",
            "0x480280017ffc8000",
            "0x484480017fff8000",
            "0x100000000000000000000000000000000",
            "0x480280007ffc8000",
            "0x40317fff7ffe7ffd",
            "0x482680017ffc8000",
            "0x3",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x20680017fff7fff",
            "0x10",
            "0x480a7ffc7fff8000",
            "0x482680017ffd8000",
            "0x11000000000000000000000000000000000000000000000101",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x480680017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48127ffe7fff8000",
            "0x48287ffd80007ffe",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe7",
            "0x482680017ffd8000",
            "0x11000000000000000000000000000000000000000000000101",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x20680017fff7fff",
            "0xc",
            "0x40780017fff7fff",
            "0xa",
            "0x480680017fff8000",
            "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeff",
            "0x480a7ffc7fff8000",
            "0x48287ffd80007ffe",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd8",
            "0x10780017fff7fff",
            "0x8",
            "0x40780017fff7fff",
            "0xb",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd0",
            "0x480a7ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x400380007ffb7ffc",
            "0x400380017ffb7ffd",
            "0x482680017ffb8000",
            "0x5",
            "0x480280037ffb8000",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffd",
            "0x5",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x3",
            "0x48487ffc7fff8000",
            "0x48487ffc7fff8000",
            "0x482480017fff8000",
            "0x1",
            "0x480680017fff8000",
            "0x2",
            "0x48487ffd7fff8000",
            "0x48507fff80007ffd",
            "0x48507fff7fff8000",
            "0x48287ffc80007fff",
            "0x48287ffc80007fff",
            "0x48317fff80007ffc",
            "0x48507fff7ffb8000",
            "0x48127ffd7fff8000",
            "0x48287ffd80007ffe",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffb",
            "0x5",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffd",
            "0x5",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x48297ffc80007ffa",
            "0x20680017fff7fff",
            "0xf",
            "0x48297ffd80007ffb",
            "0x20680017fff7fff",
            "0x7",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd8",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x0",
            "0x480680017fff8000",
            "0x0",
            "0x208b7fff7fff7ffe",
            "0x48297ffd80007ffb",
            "0x48297ffc80007ffa",
            "0x48507fff80007ffe",
            "0x48507fff7fff8000",
            "0x48287ffa80007fff",
            "0x48287ffc80007fff",
            "0x48317fff80007ffa",
            "0x48507fff7ffb8000",
            "0x48127ffd7fff8000",
            "0x48287ffb80007ffe",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x20780017fff7ffd",
            "0x6",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd0",
            "0x400280007ff87ffe",
            "0x400280017ff87fff",
            "0x400380047ff87ffb",
            "0x400380027ff87ffc",
            "0x400380037ff87ffd",
            "0x480280057ff88000",
            "0x480280067ff88000",
            "0x480a80007fff8000",
            "0x4846800180018000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffc4",
            "0x482680017ff88000",
            "0x7",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x53656e644d657373616765546f4c31",
            "0x400280007ffa7fff",
            "0x400380017ffa7ffb",
            "0x400380027ffa7ffc",
            "0x400380037ffa7ffd",
            "0x482680017ffa8000",
            "0x4",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffef4",
            "0x400780017fff8000",
            "0x0",
            "0x400780017fff8001",
            "0x0",
            "0x48127ffe7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x480a7ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480280007ffb8000",
            "0x1104800180018000",
            "0x2b",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffee4",
            "0x40137ffd7fff8000",
            "0x480280017ffb8000",
            "0x40297ffd7fff8001",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x480a7ffb7fff8000",
            "0x480280007ffc8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffec2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffed5",
            "0x40137ffd7fff8000",
            "0x480280017ffc8000",
            "0x402580017fff8001",
            "0x1",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x27",
            "0x48127ffe7fff8000",
            "0x480a7ffb7fff8000",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe9",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffea9",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffc",
            "0x5",
            "0x480a7ffa7fff8000",
            "0x480a7ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x482680017ffc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x40337fff7ffb8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffd7fff8000",
            "0x48317ffd80008000",
            "0x400080007ffd7ffe",
            "0x480080007ffc8000",
            "0x400080017ffc7fff",
            "0x482480017ffb8000",
            "0x1",
            "0x482480017ffb8000",
            "0x3",
            "0x480080027ffa8000",
            "0x20680017fff7ffb",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff8",
            "0x208b7fff7fff7ffe",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffad",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffb1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffda",
            "0x208b7fff7fff7ffe",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffa2",
            "0x480a7ff77fff8000",
            "0x48127ffe7fff8000",
            "0x480680017fff8000",
            "0x535441524b4e45545f434f4e54524143545f41444452455353",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffb6",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffb3",
            "0x480a7ff97fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffb0",
            "0x480a7ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffad",
            "0x480a7ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffb9",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffc2",
            "0x480a7ff87fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffef7",
            "0x48127fe17fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x391a88f3badec8650b4d8356e18655269ee975e58e0060aa076396ce0b1dccb",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe5f",
            "0x480a7ffc7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffee9",
            "0x48127fe17fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff0",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffeb1",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe2",
            "0x480a7ff97fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffeaa",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffea2",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x2",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff5",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffe7fff8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280037ffb8000",
            "0x480280047ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ff97fff8000",
            "0x208b7fff7fff7ffe",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffff",
            "0x40780017fff7fff",
            "0x1",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280037ffb8000",
            "0x480280047ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ff97fff8000",
            "0x208b7fff7fff7ffe",
            "0x400780017fff7ffd",
            "0x19",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x40780017fff7fff",
            "0x1",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280037ffb8000",
            "0x480280047ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ff97fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff2",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x480280047ffb8000",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x208b7fff7fff7ffe",
            "0x400380007ffb7ffc",
            "0x400380017ffb7ffd",
            "0x480680017fff8000",
            "0xf",
            "0x400280027ffb7fff",
            "0x482680017ffb8000",
            "0x5",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x2",
            "0x402a7ffd7ffc7fff",
            "0x480280037ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff3",
            "0x40780017fff7fff",
            "0x1",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x48127ffb7fff8000",
            "0x480280047ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ff97fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x400780017fff8000",
            "0x9",
            "0x480a7ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff6",
            "0x40780017fff7fff",
            "0x1",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480280047ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ff97fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe17",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe0c",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x2",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe9",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffef",
            "0x48127ff67fff8000",
            "0x480280017ffb8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x480280047ffb8000",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffc",
            "0x4",
            "0x480a7ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdee",
            "0x482680017ffc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff5",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x2",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffec",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffe7fff8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280037ffb8000",
            "0x480280047ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ff97fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdd0",
            "0x480680017fff8000",
            "0x1",
            "0x400680017fff7fff",
            "0x0",
            "0x48127ffe7fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x2",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff0",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffe7fff8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280037ffb8000",
            "0x480280047ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ff97fff8000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x0",
            "0x480680017fff8000",
            "0x1",
            "0x480680017fff8000",
            "0x2",
            "0x480680017fff8000",
            "0x3",
            "0x480680017fff8000",
            "0x4",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ff8",
            "0x4003800180007ff9",
            "0x4003800280007ffa",
            "0x4003800380007ffb",
            "0x4003800480007ffc",
            "0x4826800180008000",
            "0x5",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe8",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff0",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x480280047ffb8000",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd46",
            "0x208b7fff7fff7ffe",
            "0x480280027ffb8000",
            "0x480280027ffd8000",
            "0x400080007ffe7fff",
            "0x482680017ffd8000",
            "0x3",
            "0x480280027ffd8000",
            "0x48307fff7ffe8000",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x482680017ffd8000",
            "0x3",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffeb",
            "0x480280027ffb8000",
            "0x48127ffc7fff8000",
            "0x480280017ffb8000",
            "0x482480017ffd8000",
            "0x1",
            "0x480280037ffb8000",
            "0x480280047ffb8000",
            "0x48127ff87fff8000",
            "0x48127ff87fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x400780017fff7ffc",
            "0x2",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480a7ff97fff8000",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x2",
            "0x482480017ffb8000",
            "0x1",
            "0x482480017ffb8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd0a",
            "0x482480017fff8000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffc",
            "0x40137fff7fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480680017fff8000",
            "0x5",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd10",
            "0x48127ffd7fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd09",
            "0x48127ffd7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x480280027ffb8000",
            "0x480280037ffd8000",
            "0x400080007ffe7fff",
            "0x482680017ffd8000",
            "0x4",
            "0x480280037ffd8000",
            "0x48307fff7ffe8000",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x480280037ffd8000",
            "0x482680017ffd8000",
            "0x4",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffc3",
            "0x480280027ffb8000",
            "0x48127ffe7fff8000",
            "0x482480017ffe8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe3",
            "0x48127ff47fff8000",
            "0x480280017ffb8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x480280047ffb8000",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcca",
            "0x208b7fff7fff7ffe",
            "0x480280027ffb8000",
            "0x480280027ffd8000",
            "0x400080007ffe7fff",
            "0x482680017ffd8000",
            "0x3",
            "0x480280027ffd8000",
            "0x48307fff7ffe8000",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x482680017ffd8000",
            "0x3",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffeb",
            "0x480280027ffb8000",
            "0x48127ffc7fff8000",
            "0x480280017ffb8000",
            "0x482480017ffd8000",
            "0x1",
            "0x480280037ffb8000",
            "0x480280047ffb8000",
            "0x48127ff87fff8000",
            "0x48127ff87fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd0a",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff7",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffe7fff8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280037ffb8000",
            "0x480280047ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ff97fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffca8",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x480280027ffb8000",
            "0x480280027ffd8000",
            "0x400080007ffe7fff",
            "0x482680017ffd8000",
            "0x3",
            "0x480280027ffd8000",
            "0x48307fff7ffe8000",
            "0x482480017fff8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x482680017ffd8000",
            "0x3",
            "0x480080007ff98000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffde",
            "0x480280027ffb8000",
            "0x48127ffe7fff8000",
            "0x482480017ffe8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe1",
            "0x48127ff47fff8000",
            "0x480280017ffb8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x480280047ffb8000",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480680017fff8000",
            "0x27",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdfb",
            "0x480680017fff8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffde9",
            "0x400680017fff7fff",
            "0x27",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffea",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480280047ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ff97fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd9c",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x480280027ffb8000",
            "0x480280027ffd8000",
            "0x400080007ffe7fff",
            "0x482680017ffd8000",
            "0x3",
            "0x480280027ffd8000",
            "0x48307fff7ffe8000",
            "0x482480017fff8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280027ffb8000",
            "0x480280017ffb8000",
            "0x482480017ffe8000",
            "0x1",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x482680017ffd8000",
            "0x3",
            "0x480080007ff78000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffda",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe1",
            "0x480280007ffb8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x480280047ffb8000",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x208b7fff7fff7ffe",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffff",
            "0x40780017fff7fff",
            "0x1",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280037ffb8000",
            "0x480280047ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ff97fff8000",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffd",
            "0x7",
            "0x480680017fff8000",
            "0x1",
            "0x400680017fff7fff",
            "0x0",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff8",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x40780017fff7fff",
            "0x1",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280037ffb8000",
            "0x480280047ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ff97fff8000",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffd",
            "0x3",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffc",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff5",
            "0x40780017fff7fff",
            "0x1",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280037ffb8000",
            "0x480280047ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ff97fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x20780017fff7ffd",
            "0x4",
            "0x480a7ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffc8000",
            "0x4149bf4ea08a044f92bce7d3246b12c73718e8aa2a04a83e92298c4b9924e2d",
            "0x20680017fff7fff",
            "0x12",
            "0x482680017ffd8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbb5",
            "0x482480017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x48127ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbb0",
            "0x10780017fff7fff",
            "0x13",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x482680017ffd8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffba3",
            "0x482480017fff8000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffe",
            "0x40137fff7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x3",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb9d",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x3",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffcd",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffe7fff8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280037ffb8000",
            "0x480280047ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ff97fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbd0",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffba2",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb73",
            "0x482480017fff8000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffd",
            "0x40137fff7fff8000",
            "0x48127ff57fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x41b033f4a31df8067c24d1e9b550a2ce75fd4a29e1147af9752174f0e6cb20",
            "0x480680017fff8000",
            "0x4",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb6c",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x3",
            "0x4003800080007ffb",
            "0x400380007ffd7ffb",
            "0x402780017ffd8001",
            "0x1",
            "0x4826800180008000",
            "0x1",
            "0x40297ffb7fff8002",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb47",
            "0x480a80017fff8000",
            "0x4829800080008002",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x482680017ffd8000",
            "0x5",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x480280037ffd8000",
            "0x480280047ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffc7",
            "0x40137ffd7fff8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdf",
            "0x480a80007fff8000",
            "0x480280017ffb8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x480280047ffb8000",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb6e",
            "0x400a7ffd7fff7fff",
            "0x48127ffe7fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff6",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffe7fff8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280037ffb8000",
            "0x480280047ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ff97fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb5d",
            "0x400a7ffd7fff7fff",
            "0x48127ffe7fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff6",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffe7fff8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280037ffb8000",
            "0x480280047ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ff97fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb37",
            "0x400a7ffd7fff7fff",
            "0x48127ffe7fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff6",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffe7fff8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280037ffb8000",
            "0x480280047ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ff97fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff67fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb4c",
            "0x480080007fff8000",
            "0x480080017ffe8000",
            "0x480080027ffd8000",
            "0x480080037ffc8000",
            "0x480080047ffb8000",
            "0x480080057ffa8000",
            "0x480080067ff98000",
            "0x480080077ff88000",
            "0x400a7ff87fff7ff8",
            "0x400a7ff97fff7ff9",
            "0x400a7ffa7fff7ffa",
            "0x400a7ffb7fff7ffd",
            "0x400a7ffc7fff7ffe",
            "0x400a7ffd7fff7fff",
            "0x400680017fff7ffb",
            "0x0",
            "0x48127ff67fff8000",
            "0x480680017fff8000",
            "0x12c",
            "0x48127ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb2e",
            "0x480680017fff8000",
            "0x137",
            "0x48127ff67fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb29",
            "0x480680017fff8000",
            "0x142",
            "0x48127ff17fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb24",
            "0x480a7ff77fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x6",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x480280037ffd8000",
            "0x480280047ffd8000",
            "0x480280057ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd1",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffd7fff8000",
            "0x480280017ffb8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480280047ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ff97fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb0f",
            "0x400180007fff7ffd",
            "0x48127ffe7fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff6",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffe7fff8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280037ffb8000",
            "0x480280047ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ff97fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0xf",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffaeb",
            "0x480680017fff8000",
            "0xf",
            "0x480680017fff8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffae5",
            "0x480a7ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffef",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x480280027ffb8000",
            "0x480280037ffb8000",
            "0x480280047ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ff97fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa61",
            "0x40137fff7fff8000",
            "0x4003800080007ffb",
            "0x4003800180007ffc",
            "0x4003800280007ffd",
            "0x4826800180008000",
            "0x3",
            "0x480a7ff87fff8000",
            "0x480a7ffa7fff8000",
            "0x480680017fff8000",
            "0x7772be8b80a8a33dc6c1f9a6ab820c02e537c73e859de67f288c70f92571bb",
            "0x4828800080007ffc",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa71",
            "0x48127ffd7fff8000",
            "0x480a7ff97fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x2691cb735b18f3f656c3b82bd97a32b65d15019b64117513f8604d1e06fe58b",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa4d",
            "0x480a7ffc7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffad7",
            "0x48127fe17fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff0",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa9f",
            "0x48127ffe7fff8000",
            "0x482480017ff78000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa9a",
            "0x48127ffe7fff8000",
            "0x48127fee7fff8000",
            "0x48127fee7fff8000",
            "0x48127ff57fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdc",
            "0x480a7ff87fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa92",
            "0x482480017ff88000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa8d",
            "0x48127ff07fff8000",
            "0x48127ff07fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x161bc82433cf4a92809836390ccd14921dfc4dc410cf3d2adbfee5e21ecfec8",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ff97fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa7c",
            "0x482480017ff88000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa77",
            "0x48127ff07fff8000",
            "0x48127ff07fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffc1",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x480a7ffb7fff8000",
            "0x48287ffc7ffa8000",
            "0x48287ffd7ffa8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffcd",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x3",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe9",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480280047ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ff97fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff9c",
            "0x480a7ffa7fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa8f",
            "0x48127ffe7fff8000",
            "0x48127ff77fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa8a",
            "0x48127fed7fff8000",
            "0x48127fed7fff8000",
            "0x48127fed7fff8000",
            "0x480a7ffb7fff8000",
            "0x48127ff47fff8000",
            "0x48127ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff9e",
            "0x48127fbb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x3",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280037ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdd",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x480280047ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ff97fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff46",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x4",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x480280037ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffef",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffd7fff8000",
            "0x480280017ffb8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480280047ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ff97fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x654fd7e67a123dd13868093b3b7777f1ffef596c2e324f25ceaf9146698482c",
            "0x480680017fff8000",
            "0x4fad269cbf860980e38768fe9cb6b0b9ab03ee3fe84cfde2eccce597c874fd8",
            "0x480680017fff8000",
            "0x6d232c016ef1b12aec4b7f88cc0b3ab662be3b7dd7adbce5209fcfdbd42a504",
            "0x480680017fff8000",
            "0x3dbce56de34e1cfe252ead5a1f14fd261d520d343ff6b7652174e62976ef44d",
            "0x480680017fff8000",
            "0x4b5810004d9272776dec83ecc20c19353453b956e594188890b48467cb53c19",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa7f",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff69",
            "0x48127fe07fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280047ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe6",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ff97fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9c4",
            "0x400680017fff7ffe",
            "0x2",
            "0x48127ffd7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff1f",
            "0x480080007fba8000",
            "0x480080017fb98000",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x480a7ffd7fff8000",
            "0x48307ffa7ff88000",
            "0x48307ffa7ff88000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff29",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe3",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffe7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x480280047ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ff97fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x400780017fff8000",
            "0xc",
            "0x400780017fff8001",
            "0x22",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff94e",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x2",
            "0x48127ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa49",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffec",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffe7fff8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280037ffb8000",
            "0x480280047ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ff97fff8000",
            "0x208b7fff7fff7ffe"
        ],
        "debug_info": null,
        "hints": {
            "0": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.alloc",
                        "starkware.cairo.common.alloc.alloc"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 0,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "12": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.memcpy",
                        "starkware.cairo.common.memcpy.memcpy"
                    ],
                    "code": "vm_enter_scope({'n': ids.len})",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 2,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.memcpy.memcpy.len": 0
                        }
                    }
                }
            ],
            "20": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.memcpy",
                        "starkware.cairo.common.memcpy.memcpy"
                    ],
                    "code": "n -= 1\nids.continue_copying = 1 if n > 0 else 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 2,
                            "offset": 5
                        },
                        "reference_ids": {
                            "starkware.cairo.common.memcpy.memcpy.continue_copying": 1
                        }
                    }
                }
            ],
            "23": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.memcpy",
                        "starkware.cairo.common.memcpy.memcpy"
                    ],
                    "code": "vm_exit_scope()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 2,
                            "offset": 6
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "37": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.call_contract"
                    ],
                    "code": "syscall_handler.call_contract(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 5,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.call_contract.syscall_ptr": 2
                        }
                    }
                }
            ],
            "49": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.library_call"
                    ],
                    "code": "syscall_handler.library_call(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 6,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.library_call.syscall_ptr": 3
                        }
                    }
                }
            ],
            "62": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.deploy"
                    ],
                    "code": "syscall_handler.deploy(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 7,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.deploy.syscall_ptr": 4
                        }
                    }
                }
            ],
            "69": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.get_caller_address"
                    ],
                    "code": "syscall_handler.get_caller_address(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 8,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.get_caller_address.syscall_ptr": 5
                        }
                    }
                }
            ],
            "76": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.get_sequencer_address"
                    ],
                    "code": "syscall_handler.get_sequencer_address(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 9,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.get_sequencer_address.syscall_ptr": 6
                        }
                    }
                }
            ],
            "83": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.get_block_number"
                    ],
                    "code": "syscall_handler.get_block_number(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 10,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.get_block_number.syscall_ptr": 7
                        }
                    }
                }
            ],
            "90": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.get_block_timestamp"
                    ],
                    "code": "syscall_handler.get_block_timestamp(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 11,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.get_block_timestamp.syscall_ptr": 8
                        }
                    }
                }
            ],
            "97": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.get_tx_signature"
                    ],
                    "code": "syscall_handler.get_tx_signature(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 12,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.get_tx_signature.syscall_ptr": 9
                        }
                    }
                }
            ],
            "106": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.storage_read"
                    ],
                    "code": "syscall_handler.storage_read(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 13,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.storage_read.syscall_ptr": 10
                        }
                    }
                }
            ],
            "115": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.storage_write"
                    ],
                    "code": "syscall_handler.storage_write(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 14,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.storage_write.syscall_ptr": 11
                        }
                    }
                }
            ],
            "121": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.get_tx_info"
                    ],
                    "code": "syscall_handler.get_tx_info(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 15,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.get_tx_info.syscall_ptr": 12
                        }
                    }
                }
            ],
            "129": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.replace_class"
                    ],
                    "code": "syscall_handler.replace_class(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 16,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.replace_class.syscall_ptr": 13
                        }
                    }
                }
            ],
            "132": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_250_bit"
                    ],
                    "code": "from starkware.cairo.common.math_utils import as_int\n\n# Correctness check.\nvalue = as_int(ids.value, PRIME) % PRIME\nassert value < ids.UPPER_BOUND, f'{value} is outside of the range [0, 2**250).'\n\n# Calculation for the assertion.\nids.high, ids.low = divmod(ids.value, ids.SHIFT)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 17,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_250_bit.high": 16,
                            "starkware.cairo.common.math.assert_250_bit.low": 15,
                            "starkware.cairo.common.math.assert_250_bit.value": 14
                        }
                    }
                }
            ],
            "147": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.storage",
                        "starkware.starknet.common.storage.normalize_address"
                    ],
                    "code": "# Verify the assumptions on the relationship between 2**250, ADDR_BOUND and PRIME.\nADDR_BOUND = ids.ADDR_BOUND % PRIME\nassert (2**250 < ADDR_BOUND <= 2**251) and (2 * 2**250 < PRIME) and (\n        ADDR_BOUND * 2 > PRIME), \\\n    'normalize_address() cannot be used with the current constants.'\nids.is_small = 1 if ids.addr < ADDR_BOUND else 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 18,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.storage.normalize_address.addr": 17,
                            "starkware.starknet.common.storage.normalize_address.is_small": 18
                        }
                    }
                }
            ],
            "165": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.storage",
                        "starkware.starknet.common.storage.normalize_address"
                    ],
                    "code": "ids.is_250 = 1 if ids.addr < 2**250 else 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 18,
                            "offset": 2
                        },
                        "reference_ids": {
                            "starkware.starknet.common.storage.normalize_address.addr": 17,
                            "starkware.starknet.common.storage.normalize_address.is_250": 19
                        }
                    }
                }
            ],
            "259": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.ec",
                        "starkware.cairo.common.ec.ec_op"
                    ],
                    "code": "from starkware.crypto.signature.signature import ALPHA, BETA, FIELD_PRIME\nfrom starkware.python.math_utils import random_ec_point\nfrom starkware.python.utils import to_bytes\n\n# Define a seed for random_ec_point that's dependent on all the input, so that:\n#   (1) The added point s is deterministic.\n#   (2) It's hard to choose inputs for which the builtin will fail.\nseed = b\"\".join(map(to_bytes, [ids.p.x, ids.p.y, ids.m, ids.q.x, ids.q.y]))\nids.s.x, ids.s.y = random_ec_point(FIELD_PRIME, ALPHA, BETA, seed)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 23,
                            "offset": 2
                        },
                        "reference_ids": {
                            "starkware.cairo.common.ec.ec_op.m": 21,
                            "starkware.cairo.common.ec.ec_op.p": 20,
                            "starkware.cairo.common.ec.ec_op.q": 22,
                            "starkware.cairo.common.ec.ec_op.s": 23
                        }
                    }
                }
            ],
            "288": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.messages",
                        "starkware.starknet.common.messages.send_message_to_l1"
                    ],
                    "code": "syscall_handler.send_message_to_l1(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 26,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.messages.send_message_to_l1.syscall_ptr": 24
                        }
                    }
                }
            ],
            "472": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.constructor"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 43,
                            "offset": 13
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "487": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.without_arg"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 45,
                            "offset": 2
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "507": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.with_arg"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 47,
                            "offset": 4
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "520": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.return_result_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 49,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "562": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.bitwise_and"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 52,
                            "offset": 8
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "575": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__main__.sqrt"
                    ],
                    "code": "from starkware.python.math_utils import isqrt\nvalue = ids.value % PRIME\nassert value < 2 ** 250, f\"value={value} is outside of the range [0, 2**250).\"\nassert 2 ** 250 < PRIME\nids.root = isqrt(value)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 53,
                            "offset": 1
                        },
                        "reference_ids": {
                            "__main__.sqrt.root": 26,
                            "__main__.sqrt.value": 25
                        }
                    }
                }
            ],
            "586": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.sqrt"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 54,
                            "offset": 7
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "606": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.test_storage_read_write_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 56,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "657": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.write_a_lot"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 61,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "687": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.write_and_revert"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 63,
                            "offset": 15
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "709": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.test_long_retdata_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 65,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "808": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.test_nested_library_call_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 70,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "894": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.test_replace_class"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 75,
                            "offset": 11
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "914": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.test_deploy_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 77,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "981": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.test_storage_var"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 80,
                            "offset": 126
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "1002": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.test_contract_address_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 83,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "1048": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.foo"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 87,
                            "offset": 2
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "1077": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.recursive_fail"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 91,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "1102": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.recurse"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 95,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "1167": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.recursive_syscall"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 99,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "1206": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.test_write_and_transfer_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 101,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "1263": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.test_get_block_number"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 106,
                            "offset": 12
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "1287": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.test_get_block_timestamp"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 108,
                            "offset": 12
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "1311": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.test_get_sequencer_address"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 110,
                            "offset": 12
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "1372": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.test_get_tx_info"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 112,
                            "offset": 45
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "1396": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.test_tx_version"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 114,
                            "offset": 12
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "1427": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.test_count_actual_storage_changes"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 116,
                            "offset": 18
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "1559": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.advance_counter"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 124,
                            "offset": 145
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "1608": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.xor_counters"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 126,
                            "offset": 161
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "1639": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.call_xor_counters"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 128,
                            "offset": 35
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "1679": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.test_ec_op"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 132,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "1722": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.add_signature_to_counters"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 134,
                            "offset": 153
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "1756": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.send_message"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 136,
                            "offset": 17
                        },
                        "reference_ids": {}
                    }
                }
            ]
        },
        "identifiers": {
            "__main__.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "__main__.EcOpBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.EcOpBuiltin",
                "type": "alias"
            },
            "__main__.EcPoint": {
                "destination": "starkware.cairo.common.ec_point.EcPoint",
                "type": "alias"
            },
            "__main__.FALSE": {
                "destination": "starkware.cairo.common.bool.FALSE",
                "type": "alias"
            },
            "__main__.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "__main__.IndexAndValues": {
                "full_name": "__main__.IndexAndValues",
                "members": {
                    "index": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "values": {
                        "cairo_type": "(x: felt, y: felt)",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.MyContract": {
                "type": "namespace"
            },
            "__main__.MyContract.Args": {
                "full_name": "__main__.MyContract.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.MyContract.ImplicitArgs": {
                "full_name": "__main__.MyContract.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.MyContract.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.MyContract.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.MyContract.XOR_COUNTERS_SELECTOR": {
                "type": "const",
                "value": 211046736873364296151239729186038899848347343952293323847223056826502574523
            },
            "__main__.MyContract.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "__main__.MyContract.call_contract": {
                "destination": "starkware.starknet.common.syscalls.call_contract",
                "type": "alias"
            },
            "__main__.MyContract.library_call": {
                "destination": "starkware.starknet.common.syscalls.library_call",
                "type": "alias"
            },
            "__main__.MyContract.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__main__.MyContract.xor_counters": {
                "decorators": [],
                "pc": 1438,
                "type": "function"
            },
            "__main__.MyContract.xor_counters.Args": {
                "full_name": "__main__.MyContract.xor_counters.Args",
                "members": {
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "index_and_x": {
                        "cairo_type": "__main__.IndexAndValues",
                        "offset": 1
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__.MyContract.xor_counters.ImplicitArgs": {
                "full_name": "__main__.MyContract.xor_counters.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.MyContract.xor_counters.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.MyContract.xor_counters.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__main__.TRANSFER_FROM_SELECTOR": {
                "type": "const",
                "value": 116061167288211781254449158074459916871457383008289084697957612485591092000
            },
            "__main__.TxInfo": {
                "destination": "starkware.starknet.common.syscalls.TxInfo",
                "type": "alias"
            },
            "__main__.add_signature_to_counters": {
                "decorators": [
                    "external"
                ],
                "pc": 1690,
                "type": "function"
            },
            "__main__.add_signature_to_counters.Args": {
                "full_name": "__main__.add_signature_to_counters.Args",
                "members": {
                    "index": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.add_signature_to_counters.ImplicitArgs": {
                "full_name": "__main__.add_signature_to_counters.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.add_signature_to_counters.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.add_signature_to_counters.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.advance_counter": {
                "decorators": [
                    "external"
                ],
                "pc": 1533,
                "type": "function"
            },
            "__main__.advance_counter.Args": {
                "full_name": "__main__.advance_counter.Args",
                "members": {
                    "diff_0": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "diff_1": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "index": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.advance_counter.ImplicitArgs": {
                "full_name": "__main__.advance_counter.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.advance_counter.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.advance_counter.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.bitwise_and": {
                "decorators": [
                    "external"
                ],
                "pc": 546,
                "type": "function"
            },
            "__main__.bitwise_and.Args": {
                "full_name": "__main__.bitwise_and.Args",
                "members": {
                    "x": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "y": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.bitwise_and.ImplicitArgs": {
                "full_name": "__main__.bitwise_and.ImplicitArgs",
                "members": {
                    "bitwise_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.bitwise_and.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.bitwise_and.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.bitwise_xor": {
                "destination": "starkware.cairo.common.bitwise.bitwise_xor",
                "type": "alias"
            },
            "__main__.call_contract": {
                "destination": "starkware.starknet.common.syscalls.call_contract",
                "type": "alias"
            },
            "__main__.call_xor_counters": {
                "decorators": [
                    "external"
                ],
                "pc": 1619,
                "type": "function"
            },
            "__main__.call_xor_counters.Args": {
                "full_name": "__main__.call_xor_counters.Args",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "index_and_x": {
                        "cairo_type": "__main__.IndexAndValues",
                        "offset": 1
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__.call_xor_counters.ImplicitArgs": {
                "full_name": "__main__.call_xor_counters.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.call_xor_counters.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.call_xor_counters.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.constructor": {
                "decorators": [
                    "constructor"
                ],
                "pc": 458,
                "type": "function"
            },
            "__main__.constructor.Args": {
                "full_name": "__main__.constructor.Args",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.constructor.ImplicitArgs": {
                "full_name": "__main__.constructor.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.constructor.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.constructor.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.deploy": {
                "destination": "starkware.starknet.common.syscalls.deploy",
                "type": "alias"
            },
            "__main__.ec_op": {
                "destination": "starkware.cairo.common.ec.ec_op",
                "type": "alias"
            },
            "__main__.ec_point": {
                "type": "namespace"
            },
            "__main__.ec_point.Args": {
                "full_name": "__main__.ec_point.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.ec_point.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "__main__.ec_point.ImplicitArgs": {
                "full_name": "__main__.ec_point.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.ec_point.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.ec_point.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.ec_point.addr": {
                "decorators": [],
                "pc": 1511,
                "type": "function"
            },
            "__main__.ec_point.addr.Args": {
                "full_name": "__main__.ec_point.addr.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.ec_point.addr.ImplicitArgs": {
                "full_name": "__main__.ec_point.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.ec_point.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "__main__.ec_point.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.ec_point.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "__main__.ec_point.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "__main__.ec_point.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "__main__.ec_point.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "__main__.ec_point.write": {
                "decorators": [],
                "pc": 1516,
                "type": "function"
            },
            "__main__.ec_point.write.Args": {
                "full_name": "__main__.ec_point.write.Args",
                "members": {
                    "value": {
                        "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.ec_point.write.ImplicitArgs": {
                "full_name": "__main__.ec_point.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.ec_point.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.ec_point.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.foo": {
                "decorators": [
                    "external"
                ],
                "pc": 1044,
                "type": "function"
            },
            "__main__.foo.Args": {
                "full_name": "__main__.foo.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.foo.ImplicitArgs": {
                "full_name": "__main__.foo.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.foo.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.foo.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.get_block_number": {
                "destination": "starkware.starknet.common.syscalls.get_block_number",
                "type": "alias"
            },
            "__main__.get_block_timestamp": {
                "destination": "starkware.starknet.common.syscalls.get_block_timestamp",
                "type": "alias"
            },
            "__main__.get_caller_address": {
                "destination": "starkware.starknet.common.syscalls.get_caller_address",
                "type": "alias"
            },
            "__main__.get_contract_address": {
                "destination": "starkware.starknet.core.os.contract_address.contract_address.get_contract_address",
                "type": "alias"
            },
            "__main__.get_fp_and_pc": {
                "destination": "starkware.cairo.common.registers.get_fp_and_pc",
                "type": "alias"
            },
            "__main__.get_sequencer_address": {
                "destination": "starkware.starknet.common.syscalls.get_sequencer_address",
                "type": "alias"
            },
            "__main__.get_tx_info": {
                "destination": "starkware.starknet.common.syscalls.get_tx_info",
                "type": "alias"
            },
            "__main__.get_tx_signature": {
                "destination": "starkware.starknet.common.syscalls.get_tx_signature",
                "type": "alias"
            },
            "__main__.library_call": {
                "destination": "starkware.starknet.common.syscalls.library_call",
                "type": "alias"
            },
            "__main__.number_map": {
                "type": "namespace"
            },
            "__main__.number_map.Args": {
                "full_name": "__main__.number_map.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.number_map.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "__main__.number_map.ImplicitArgs": {
                "full_name": "__main__.number_map.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.number_map.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.number_map.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.number_map.addr": {
                "decorators": [],
                "pc": 417,
                "type": "function"
            },
            "__main__.number_map.addr.Args": {
                "full_name": "__main__.number_map.addr.Args",
                "members": {
                    "key": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.number_map.addr.ImplicitArgs": {
                "full_name": "__main__.number_map.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.number_map.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "__main__.number_map.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.number_map.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "__main__.number_map.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "__main__.number_map.read": {
                "decorators": [],
                "pc": 431,
                "type": "function"
            },
            "__main__.number_map.read.Args": {
                "full_name": "__main__.number_map.read.Args",
                "members": {
                    "key": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.number_map.read.ImplicitArgs": {
                "full_name": "__main__.number_map.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.number_map.read.Return": {
                "cairo_type": "(value: felt)",
                "type": "type_definition"
            },
            "__main__.number_map.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.number_map.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "__main__.number_map.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "__main__.number_map.write": {
                "decorators": [],
                "pc": 445,
                "type": "function"
            },
            "__main__.number_map.write.Args": {
                "full_name": "__main__.number_map.write.Args",
                "members": {
                    "key": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.number_map.write.ImplicitArgs": {
                "full_name": "__main__.number_map.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.number_map.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.number_map.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.recurse": {
                "decorators": [
                    "external"
                ],
                "pc": 1088,
                "type": "function"
            },
            "__main__.recurse.Args": {
                "full_name": "__main__.recurse.Args",
                "members": {
                    "depth": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.recurse.ImplicitArgs": {
                "full_name": "__main__.recurse.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.recurse.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.recurse.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.recursive_fail": {
                "decorators": [
                    "external"
                ],
                "pc": 1059,
                "type": "function"
            },
            "__main__.recursive_fail.Args": {
                "full_name": "__main__.recursive_fail.Args",
                "members": {
                    "depth": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.recursive_fail.ImplicitArgs": {
                "full_name": "__main__.recursive_fail.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.recursive_fail.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.recursive_fail.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.recursive_syscall": {
                "decorators": [
                    "external"
                ],
                "pc": 1113,
                "type": "function"
            },
            "__main__.recursive_syscall.Args": {
                "full_name": "__main__.recursive_syscall.Args",
                "members": {
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "depth": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "function_selector": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.recursive_syscall.ImplicitArgs": {
                "full_name": "__main__.recursive_syscall.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.recursive_syscall.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.recursive_syscall.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__main__.replace_class": {
                "destination": "starkware.starknet.common.syscalls.replace_class",
                "type": "alias"
            },
            "__main__.return_result": {
                "decorators": [
                    "external"
                ],
                "pc": 518,
                "type": "function"
            },
            "__main__.return_result.Args": {
                "full_name": "__main__.return_result.Args",
                "members": {
                    "num": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.return_result.ImplicitArgs": {
                "full_name": "__main__.return_result.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.return_result.Return": {
                "cairo_type": "(result: felt)",
                "type": "type_definition"
            },
            "__main__.return_result.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.send_message": {
                "decorators": [
                    "external"
                ],
                "pc": 1733,
                "type": "function"
            },
            "__main__.send_message.Args": {
                "full_name": "__main__.send_message.Args",
                "members": {
                    "to_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.send_message.ImplicitArgs": {
                "full_name": "__main__.send_message.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.send_message.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.send_message.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "__main__.send_message_to_l1": {
                "destination": "starkware.starknet.common.messages.send_message_to_l1",
                "type": "alias"
            },
            "__main__.sqrt": {
                "decorators": [
                    "external"
                ],
                "pc": 573,
                "type": "function"
            },
            "__main__.sqrt.Args": {
                "full_name": "__main__.sqrt.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.sqrt.ImplicitArgs": {
                "full_name": "__main__.sqrt.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.sqrt.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.sqrt.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__main__.sqrt.root": {
                "cairo_type": "felt",
                "full_name": "__main__.sqrt.root",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 53,
                            "offset": 1
                        },
                        "pc": 575,
                        "value": "[cast(fp, felt*)]"
                    }
                ],
                "type": "reference"
            },
            "__main__.sqrt.value": {
                "cairo_type": "felt",
                "full_name": "__main__.sqrt.value",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 53,
                            "offset": 0
                        },
                        "pc": 573,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "__main__.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "__main__.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "__main__.test_call_contract": {
                "decorators": [
                    "external",
                    "raw_output"
                ],
                "pc": 848,
                "type": "function"
            },
            "__main__.test_call_contract.Args": {
                "full_name": "__main__.test_call_contract.Args",
                "members": {
                    "calldata": {
                        "cairo_type": "felt*",
                        "offset": 3
                    },
                    "calldata_len": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "function_selector": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__.test_call_contract.ImplicitArgs": {
                "full_name": "__main__.test_call_contract.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.test_call_contract.Return": {
                "cairo_type": "(retdata_size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__main__.test_call_contract.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.test_contract_address": {
                "decorators": [
                    "external"
                ],
                "pc": 992,
                "type": "function"
            },
            "__main__.test_contract_address.Args": {
                "full_name": "__main__.test_contract_address.Args",
                "members": {
                    "class_hash": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "constructor_calldata": {
                        "cairo_type": "felt*",
                        "offset": 3
                    },
                    "constructor_calldata_len": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "deployer_address": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "salt": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "__main__.test_contract_address.ImplicitArgs": {
                "full_name": "__main__.test_contract_address.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.test_contract_address.Return": {
                "cairo_type": "(contract_address: felt)",
                "type": "type_definition"
            },
            "__main__.test_contract_address.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.test_count_actual_storage_changes": {
                "decorators": [
                    "external"
                ],
                "pc": 1407,
                "type": "function"
            },
            "__main__.test_count_actual_storage_changes.Args": {
                "full_name": "__main__.test_count_actual_storage_changes.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.test_count_actual_storage_changes.ImplicitArgs": {
                "full_name": "__main__.test_count_actual_storage_changes.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.test_count_actual_storage_changes.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.test_count_actual_storage_changes.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.test_count_actual_storage_changes.address": {
                "type": "const",
                "value": 15
            },
            "__main__.test_deploy": {
                "decorators": [
                    "external"
                ],
                "pc": 905,
                "type": "function"
            },
            "__main__.test_deploy.Args": {
                "full_name": "__main__.test_deploy.Args",
                "members": {
                    "class_hash": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "constructor_calldata": {
                        "cairo_type": "felt*",
                        "offset": 3
                    },
                    "constructor_calldata_len": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "contract_address_salt": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "deploy_from_zero": {
                        "cairo_type": "felt",
                        "offset": 4
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "__main__.test_deploy.ImplicitArgs": {
                "full_name": "__main__.test_deploy.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.test_deploy.Return": {
                "cairo_type": "(contract_address: felt)",
                "type": "type_definition"
            },
            "__main__.test_deploy.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.test_ec_op": {
                "decorators": [
                    "external"
                ],
                "pc": 1650,
                "type": "function"
            },
            "__main__.test_ec_op.Args": {
                "full_name": "__main__.test_ec_op.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.test_ec_op.ImplicitArgs": {
                "full_name": "__main__.test_ec_op.ImplicitArgs",
                "members": {
                    "ec_op_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.EcOpBuiltin*",
                        "offset": 3
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__.test_ec_op.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.test_ec_op.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.test_get_block_number": {
                "decorators": [
                    "external"
                ],
                "pc": 1250,
                "type": "function"
            },
            "__main__.test_get_block_number.Args": {
                "full_name": "__main__.test_get_block_number.Args",
                "members": {
                    "expected_block_number": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.test_get_block_number.ImplicitArgs": {
                "full_name": "__main__.test_get_block_number.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.test_get_block_number.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.test_get_block_number.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.test_get_block_timestamp": {
                "decorators": [
                    "external"
                ],
                "pc": 1274,
                "type": "function"
            },
            "__main__.test_get_block_timestamp.Args": {
                "full_name": "__main__.test_get_block_timestamp.Args",
                "members": {
                    "expected_block_timestamp": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.test_get_block_timestamp.ImplicitArgs": {
                "full_name": "__main__.test_get_block_timestamp.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.test_get_block_timestamp.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.test_get_block_timestamp.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.test_get_sequencer_address": {
                "decorators": [
                    "external"
                ],
                "pc": 1298,
                "type": "function"
            },
            "__main__.test_get_sequencer_address.Args": {
                "full_name": "__main__.test_get_sequencer_address.Args",
                "members": {
                    "expected_sequencer_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.test_get_sequencer_address.ImplicitArgs": {
                "full_name": "__main__.test_get_sequencer_address.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.test_get_sequencer_address.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.test_get_sequencer_address.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.test_get_tx_info": {
                "decorators": [
                    "external"
                ],
                "pc": 1322,
                "type": "function"
            },
            "__main__.test_get_tx_info.Args": {
                "full_name": "__main__.test_get_tx_info.Args",
                "members": {
                    "expected_account_contract_address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "expected_chain_id": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "expected_max_fee": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "expected_nonce": {
                        "cairo_type": "felt",
                        "offset": 5
                    },
                    "expected_transaction_hash": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "expected_version": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 6,
                "type": "struct"
            },
            "__main__.test_get_tx_info.ImplicitArgs": {
                "full_name": "__main__.test_get_tx_info.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.test_get_tx_info.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.test_get_tx_info.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.test_library_call": {
                "decorators": [
                    "external",
                    "raw_output"
                ],
                "pc": 736,
                "type": "function"
            },
            "__main__.test_library_call.Args": {
                "full_name": "__main__.test_library_call.Args",
                "members": {
                    "calldata": {
                        "cairo_type": "felt*",
                        "offset": 3
                    },
                    "calldata_len": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "class_hash": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__.test_library_call.ImplicitArgs": {
                "full_name": "__main__.test_library_call.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.test_library_call.Return": {
                "cairo_type": "(retdata_size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__main__.test_library_call.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.test_long_retdata": {
                "decorators": [
                    "external"
                ],
                "pc": 698,
                "type": "function"
            },
            "__main__.test_long_retdata.Args": {
                "full_name": "__main__.test_long_retdata.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.test_long_retdata.ImplicitArgs": {
                "full_name": "__main__.test_long_retdata.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.test_long_retdata.Return": {
                "cairo_type": "(a: felt, b: felt, c: felt, d: felt, e: felt)",
                "type": "type_definition"
            },
            "__main__.test_long_retdata.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.test_nested_library_call": {
                "decorators": [
                    "external"
                ],
                "pc": 770,
                "type": "function"
            },
            "__main__.test_nested_library_call.Args": {
                "full_name": "__main__.test_nested_library_call.Args",
                "members": {
                    "calldata": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "calldata_len": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "class_hash": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "lib_selector": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "nested_selector": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "__main__.test_nested_library_call.ImplicitArgs": {
                "full_name": "__main__.test_nested_library_call.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.test_nested_library_call.Return": {
                "cairo_type": "(result: felt)",
                "type": "type_definition"
            },
            "__main__.test_nested_library_call.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__main__.test_replace_class": {
                "decorators": [
                    "external"
                ],
                "pc": 882,
                "type": "function"
            },
            "__main__.test_replace_class.Args": {
                "full_name": "__main__.test_replace_class.Args",
                "members": {
                    "class_hash": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.test_replace_class.ImplicitArgs": {
                "full_name": "__main__.test_replace_class.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.test_replace_class.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.test_replace_class.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.test_storage_read_write": {
                "decorators": [
                    "external"
                ],
                "pc": 597,
                "type": "function"
            },
            "__main__.test_storage_read_write.Args": {
                "full_name": "__main__.test_storage_read_write.Args",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.test_storage_read_write.ImplicitArgs": {
                "full_name": "__main__.test_storage_read_write.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.test_storage_read_write.Return": {
                "cairo_type": "(result: felt)",
                "type": "type_definition"
            },
            "__main__.test_storage_read_write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.test_storage_var": {
                "decorators": [
                    "external"
                ],
                "pc": 956,
                "type": "function"
            },
            "__main__.test_storage_var.Args": {
                "full_name": "__main__.test_storage_var.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.test_storage_var.ImplicitArgs": {
                "full_name": "__main__.test_storage_var.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.test_storage_var.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.test_storage_var.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.test_tx_version": {
                "decorators": [
                    "external"
                ],
                "pc": 1383,
                "type": "function"
            },
            "__main__.test_tx_version.Args": {
                "full_name": "__main__.test_tx_version.Args",
                "members": {
                    "expected_version": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.test_tx_version.ImplicitArgs": {
                "full_name": "__main__.test_tx_version.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.test_tx_version.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.test_tx_version.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.test_write_and_transfer": {
                "decorators": [
                    "external"
                ],
                "pc": 1178,
                "type": "function"
            },
            "__main__.test_write_and_transfer.Args": {
                "full_name": "__main__.test_write_and_transfer.Args",
                "members": {
                    "amount": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "fee_token_address": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "key": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "to": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "__main__.test_write_and_transfer.ImplicitArgs": {
                "full_name": "__main__.test_write_and_transfer.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.test_write_and_transfer.Return": {
                "cairo_type": "(retdata_len: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__main__.test_write_and_transfer.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__main__.two_counters": {
                "type": "namespace"
            },
            "__main__.two_counters.Args": {
                "full_name": "__main__.two_counters.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.two_counters.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "__main__.two_counters.ImplicitArgs": {
                "full_name": "__main__.two_counters.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.two_counters.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.two_counters.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.two_counters.addr": {
                "decorators": [],
                "pc": 1459,
                "type": "function"
            },
            "__main__.two_counters.addr.Args": {
                "full_name": "__main__.two_counters.addr.Args",
                "members": {
                    "index": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.two_counters.addr.ImplicitArgs": {
                "full_name": "__main__.two_counters.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.two_counters.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "__main__.two_counters.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.two_counters.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "__main__.two_counters.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "__main__.two_counters.read": {
                "decorators": [],
                "pc": 1473,
                "type": "function"
            },
            "__main__.two_counters.read.Args": {
                "full_name": "__main__.two_counters.read.Args",
                "members": {
                    "index": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.two_counters.read.ImplicitArgs": {
                "full_name": "__main__.two_counters.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.two_counters.read.Return": {
                "cairo_type": "(res: (felt, felt))",
                "type": "type_definition"
            },
            "__main__.two_counters.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.two_counters.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "__main__.two_counters.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "__main__.two_counters.write": {
                "decorators": [],
                "pc": 1493,
                "type": "function"
            },
            "__main__.two_counters.write.Args": {
                "full_name": "__main__.two_counters.write.Args",
                "members": {
                    "index": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "value": {
                        "cairo_type": "(felt, felt)",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.two_counters.write.ImplicitArgs": {
                "full_name": "__main__.two_counters.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.two_counters.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.two_counters.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.with_arg": {
                "decorators": [
                    "external"
                ],
                "pc": 498,
                "type": "function"
            },
            "__main__.with_arg.Args": {
                "full_name": "__main__.with_arg.Args",
                "members": {
                    "num": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.with_arg.ImplicitArgs": {
                "full_name": "__main__.with_arg.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.with_arg.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.with_arg.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.without_arg": {
                "decorators": [
                    "external"
                ],
                "pc": 483,
                "type": "function"
            },
            "__main__.without_arg.Args": {
                "full_name": "__main__.without_arg.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.without_arg.ImplicitArgs": {
                "full_name": "__main__.without_arg.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.without_arg.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.without_arg.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.write_a_lot": {
                "decorators": [
                    "external"
                ],
                "pc": 634,
                "type": "function"
            },
            "__main__.write_a_lot.Args": {
                "full_name": "__main__.write_a_lot.Args",
                "members": {
                    "n_writes": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.write_a_lot.ImplicitArgs": {
                "full_name": "__main__.write_a_lot.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.write_a_lot.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.write_a_lot.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.write_and_revert": {
                "decorators": [
                    "external"
                ],
                "pc": 668,
                "type": "function"
            },
            "__main__.write_and_revert.Args": {
                "full_name": "__main__.write_and_revert.Args",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.write_and_revert.ImplicitArgs": {
                "full_name": "__main__.write_and_revert.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.write_and_revert.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.write_and_revert.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.xor_counters": {
                "decorators": [
                    "external"
                ],
                "pc": 1570,
                "type": "function"
            },
            "__main__.xor_counters.Args": {
                "full_name": "__main__.xor_counters.Args",
                "members": {
                    "index_and_x": {
                        "cairo_type": "__main__.IndexAndValues",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.xor_counters.ImplicitArgs": {
                "full_name": "__main__.xor_counters.ImplicitArgs",
                "members": {
                    "bitwise_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*",
                        "offset": 3
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__.xor_counters.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.xor_counters.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.add_signature_to_counters": {
                "decorators": [
                    "external"
                ],
                "pc": 1713,
                "type": "function"
            },
            "__wrappers__.add_signature_to_counters.Args": {
                "full_name": "__wrappers__.add_signature_to_counters.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.add_signature_to_counters.ImplicitArgs": {
                "full_name": "__wrappers__.add_signature_to_counters.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.add_signature_to_counters.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.add_signature_to_counters.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.add_signature_to_counters.__wrapped_func": {
                "destination": "__main__.add_signature_to_counters",
                "type": "alias"
            },
            "__wrappers__.add_signature_to_counters_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.advance_counter": {
                "decorators": [
                    "external"
                ],
                "pc": 1548,
                "type": "function"
            },
            "__wrappers__.advance_counter.Args": {
                "full_name": "__wrappers__.advance_counter.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.advance_counter.ImplicitArgs": {
                "full_name": "__wrappers__.advance_counter.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.advance_counter.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.advance_counter.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.advance_counter.__wrapped_func": {
                "destination": "__main__.advance_counter",
                "type": "alias"
            },
            "__wrappers__.advance_counter_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.bitwise_and": {
                "decorators": [
                    "external"
                ],
                "pc": 554,
                "type": "function"
            },
            "__wrappers__.bitwise_and.Args": {
                "full_name": "__wrappers__.bitwise_and.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.bitwise_and.ImplicitArgs": {
                "full_name": "__wrappers__.bitwise_and.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.bitwise_and.Return": {
                "cairo_type": "(syscall_ptr: felt, pedersen_ptr: felt, range_check_ptr: felt, bitwise_ptr: starkware.cairo.common.cairo_builtins.BitwiseBuiltin*, ec_op_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.bitwise_and.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.bitwise_and.__wrapped_func": {
                "destination": "__main__.bitwise_and",
                "type": "alias"
            },
            "__wrappers__.bitwise_and_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.call_xor_counters": {
                "decorators": [
                    "external"
                ],
                "pc": 1628,
                "type": "function"
            },
            "__wrappers__.call_xor_counters.Args": {
                "full_name": "__wrappers__.call_xor_counters.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.call_xor_counters.ImplicitArgs": {
                "full_name": "__wrappers__.call_xor_counters.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.call_xor_counters.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: felt, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.call_xor_counters.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.call_xor_counters.__wrapped_func": {
                "destination": "__main__.call_xor_counters",
                "type": "alias"
            },
            "__wrappers__.call_xor_counters_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.constructor": {
                "decorators": [
                    "constructor"
                ],
                "pc": 464,
                "type": "function"
            },
            "__wrappers__.constructor.Args": {
                "full_name": "__wrappers__.constructor.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.constructor.ImplicitArgs": {
                "full_name": "__wrappers__.constructor.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.constructor.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: felt, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.constructor.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.constructor.__wrapped_func": {
                "destination": "__main__.constructor",
                "type": "alias"
            },
            "__wrappers__.constructor_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.foo": {
                "decorators": [
                    "external"
                ],
                "pc": 1045,
                "type": "function"
            },
            "__wrappers__.foo.Args": {
                "full_name": "__wrappers__.foo.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.foo.ImplicitArgs": {
                "full_name": "__wrappers__.foo.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.foo.Return": {
                "cairo_type": "(syscall_ptr: felt, pedersen_ptr: felt, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.foo.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.foo.__wrapped_func": {
                "destination": "__main__.foo",
                "type": "alias"
            },
            "__wrappers__.foo_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.recurse": {
                "decorators": [
                    "external"
                ],
                "pc": 1096,
                "type": "function"
            },
            "__wrappers__.recurse.Args": {
                "full_name": "__wrappers__.recurse.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.recurse.ImplicitArgs": {
                "full_name": "__wrappers__.recurse.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.recurse.Return": {
                "cairo_type": "(syscall_ptr: felt, pedersen_ptr: felt, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.recurse.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.recurse.__wrapped_func": {
                "destination": "__main__.recurse",
                "type": "alias"
            },
            "__wrappers__.recurse_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.recursive_fail": {
                "decorators": [
                    "external"
                ],
                "pc": 1071,
                "type": "function"
            },
            "__wrappers__.recursive_fail.Args": {
                "full_name": "__wrappers__.recursive_fail.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.recursive_fail.ImplicitArgs": {
                "full_name": "__wrappers__.recursive_fail.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.recursive_fail.Return": {
                "cairo_type": "(syscall_ptr: felt, pedersen_ptr: felt, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.recursive_fail.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.recursive_fail.__wrapped_func": {
                "destination": "__main__.recursive_fail",
                "type": "alias"
            },
            "__wrappers__.recursive_fail_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.recursive_syscall": {
                "decorators": [
                    "external"
                ],
                "pc": 1158,
                "type": "function"
            },
            "__wrappers__.recursive_syscall.Args": {
                "full_name": "__wrappers__.recursive_syscall.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.recursive_syscall.ImplicitArgs": {
                "full_name": "__wrappers__.recursive_syscall.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.recursive_syscall.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: felt, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.recursive_syscall.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.recursive_syscall.__wrapped_func": {
                "destination": "__main__.recursive_syscall",
                "type": "alias"
            },
            "__wrappers__.recursive_syscall_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.return_result": {
                "decorators": [
                    "external"
                ],
                "pc": 529,
                "type": "function"
            },
            "__wrappers__.return_result.Args": {
                "full_name": "__wrappers__.return_result.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.return_result.ImplicitArgs": {
                "full_name": "__wrappers__.return_result.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.return_result.Return": {
                "cairo_type": "(syscall_ptr: felt, pedersen_ptr: felt, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.return_result.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.return_result.__wrapped_func": {
                "destination": "__main__.return_result",
                "type": "alias"
            },
            "__wrappers__.return_result_encode_return": {
                "decorators": [],
                "pc": 520,
                "type": "function"
            },
            "__wrappers__.return_result_encode_return.Args": {
                "full_name": "__wrappers__.return_result_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(result: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.return_result_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.return_result_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.return_result_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.return_result_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.return_result_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.send_message": {
                "decorators": [
                    "external"
                ],
                "pc": 1749,
                "type": "function"
            },
            "__wrappers__.send_message.Args": {
                "full_name": "__wrappers__.send_message.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.send_message.ImplicitArgs": {
                "full_name": "__wrappers__.send_message.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.send_message.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: felt, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.send_message.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.send_message.__wrapped_func": {
                "destination": "__main__.send_message",
                "type": "alias"
            },
            "__wrappers__.send_message_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.sqrt": {
                "decorators": [
                    "external"
                ],
                "pc": 579,
                "type": "function"
            },
            "__wrappers__.sqrt.Args": {
                "full_name": "__wrappers__.sqrt.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.sqrt.ImplicitArgs": {
                "full_name": "__wrappers__.sqrt.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.sqrt.Return": {
                "cairo_type": "(syscall_ptr: felt, pedersen_ptr: felt, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.sqrt.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.sqrt.__wrapped_func": {
                "destination": "__main__.sqrt",
                "type": "alias"
            },
            "__wrappers__.sqrt_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.test_call_contract": {
                "decorators": [
                    "external",
                    "raw_output"
                ],
                "pc": 856,
                "type": "function"
            },
            "__wrappers__.test_call_contract.Args": {
                "full_name": "__wrappers__.test_call_contract.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.test_call_contract.ImplicitArgs": {
                "full_name": "__wrappers__.test_call_contract.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.test_call_contract.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: felt, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.test_call_contract.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.test_call_contract.__wrapped_func": {
                "destination": "__main__.test_call_contract",
                "type": "alias"
            },
            "__wrappers__.test_call_contract_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.test_contract_address": {
                "decorators": [
                    "external"
                ],
                "pc": 1011,
                "type": "function"
            },
            "__wrappers__.test_contract_address.Args": {
                "full_name": "__wrappers__.test_contract_address.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.test_contract_address.ImplicitArgs": {
                "full_name": "__wrappers__.test_contract_address.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.test_contract_address.Return": {
                "cairo_type": "(syscall_ptr: felt, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.test_contract_address.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.test_contract_address.__wrapped_func": {
                "destination": "__main__.test_contract_address",
                "type": "alias"
            },
            "__wrappers__.test_contract_address_encode_return": {
                "decorators": [],
                "pc": 1002,
                "type": "function"
            },
            "__wrappers__.test_contract_address_encode_return.Args": {
                "full_name": "__wrappers__.test_contract_address_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(contract_address: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.test_contract_address_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.test_contract_address_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.test_contract_address_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.test_contract_address_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.test_contract_address_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.test_count_actual_storage_changes": {
                "decorators": [
                    "external"
                ],
                "pc": 1422,
                "type": "function"
            },
            "__wrappers__.test_count_actual_storage_changes.Args": {
                "full_name": "__wrappers__.test_count_actual_storage_changes.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.test_count_actual_storage_changes.ImplicitArgs": {
                "full_name": "__wrappers__.test_count_actual_storage_changes.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.test_count_actual_storage_changes.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.test_count_actual_storage_changes.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.test_count_actual_storage_changes.__wrapped_func": {
                "destination": "__main__.test_count_actual_storage_changes",
                "type": "alias"
            },
            "__wrappers__.test_count_actual_storage_changes_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.test_deploy": {
                "decorators": [
                    "external"
                ],
                "pc": 923,
                "type": "function"
            },
            "__wrappers__.test_deploy.Args": {
                "full_name": "__wrappers__.test_deploy.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.test_deploy.ImplicitArgs": {
                "full_name": "__wrappers__.test_deploy.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.test_deploy.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: felt, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.test_deploy.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.test_deploy.__wrapped_func": {
                "destination": "__main__.test_deploy",
                "type": "alias"
            },
            "__wrappers__.test_deploy_encode_return": {
                "decorators": [],
                "pc": 914,
                "type": "function"
            },
            "__wrappers__.test_deploy_encode_return.Args": {
                "full_name": "__wrappers__.test_deploy_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(contract_address: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.test_deploy_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.test_deploy_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.test_deploy_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.test_deploy_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.test_deploy_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.test_ec_op": {
                "decorators": [
                    "external"
                ],
                "pc": 1672,
                "type": "function"
            },
            "__wrappers__.test_ec_op.Args": {
                "full_name": "__wrappers__.test_ec_op.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.test_ec_op.ImplicitArgs": {
                "full_name": "__wrappers__.test_ec_op.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.test_ec_op.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: starkware.cairo.common.cairo_builtins.EcOpBuiltin*, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.test_ec_op.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.test_ec_op.__wrapped_func": {
                "destination": "__main__.test_ec_op",
                "type": "alias"
            },
            "__wrappers__.test_ec_op_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.test_get_block_number": {
                "decorators": [
                    "external"
                ],
                "pc": 1256,
                "type": "function"
            },
            "__wrappers__.test_get_block_number.Args": {
                "full_name": "__wrappers__.test_get_block_number.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.test_get_block_number.ImplicitArgs": {
                "full_name": "__wrappers__.test_get_block_number.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.test_get_block_number.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: felt, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.test_get_block_number.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.test_get_block_number.__wrapped_func": {
                "destination": "__main__.test_get_block_number",
                "type": "alias"
            },
            "__wrappers__.test_get_block_number_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.test_get_block_timestamp": {
                "decorators": [
                    "external"
                ],
                "pc": 1280,
                "type": "function"
            },
            "__wrappers__.test_get_block_timestamp.Args": {
                "full_name": "__wrappers__.test_get_block_timestamp.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.test_get_block_timestamp.ImplicitArgs": {
                "full_name": "__wrappers__.test_get_block_timestamp.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.test_get_block_timestamp.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: felt, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.test_get_block_timestamp.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.test_get_block_timestamp.__wrapped_func": {
                "destination": "__main__.test_get_block_timestamp",
                "type": "alias"
            },
            "__wrappers__.test_get_block_timestamp_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.test_get_sequencer_address": {
                "decorators": [
                    "external"
                ],
                "pc": 1304,
                "type": "function"
            },
            "__wrappers__.test_get_sequencer_address.Args": {
                "full_name": "__wrappers__.test_get_sequencer_address.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.test_get_sequencer_address.ImplicitArgs": {
                "full_name": "__wrappers__.test_get_sequencer_address.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.test_get_sequencer_address.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: felt, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.test_get_sequencer_address.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.test_get_sequencer_address.__wrapped_func": {
                "destination": "__main__.test_get_sequencer_address",
                "type": "alias"
            },
            "__wrappers__.test_get_sequencer_address_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.test_get_tx_info": {
                "decorators": [
                    "external"
                ],
                "pc": 1359,
                "type": "function"
            },
            "__wrappers__.test_get_tx_info.Args": {
                "full_name": "__wrappers__.test_get_tx_info.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.test_get_tx_info.ImplicitArgs": {
                "full_name": "__wrappers__.test_get_tx_info.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.test_get_tx_info.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: felt, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.test_get_tx_info.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.test_get_tx_info.__wrapped_func": {
                "destination": "__main__.test_get_tx_info",
                "type": "alias"
            },
            "__wrappers__.test_get_tx_info_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.test_library_call": {
                "decorators": [
                    "external",
                    "raw_output"
                ],
                "pc": 744,
                "type": "function"
            },
            "__wrappers__.test_library_call.Args": {
                "full_name": "__wrappers__.test_library_call.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.test_library_call.ImplicitArgs": {
                "full_name": "__wrappers__.test_library_call.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.test_library_call.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: felt, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.test_library_call.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.test_library_call.__wrapped_func": {
                "destination": "__main__.test_library_call",
                "type": "alias"
            },
            "__wrappers__.test_library_call_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.test_long_retdata": {
                "decorators": [
                    "external"
                ],
                "pc": 722,
                "type": "function"
            },
            "__wrappers__.test_long_retdata.Args": {
                "full_name": "__wrappers__.test_long_retdata.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.test_long_retdata.ImplicitArgs": {
                "full_name": "__wrappers__.test_long_retdata.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.test_long_retdata.Return": {
                "cairo_type": "(syscall_ptr: felt, pedersen_ptr: felt, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.test_long_retdata.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.test_long_retdata.__wrapped_func": {
                "destination": "__main__.test_long_retdata",
                "type": "alias"
            },
            "__wrappers__.test_long_retdata_encode_return": {
                "decorators": [],
                "pc": 709,
                "type": "function"
            },
            "__wrappers__.test_long_retdata_encode_return.Args": {
                "full_name": "__wrappers__.test_long_retdata_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 5
                    },
                    "ret_value": {
                        "cairo_type": "(a: felt, b: felt, c: felt, d: felt, e: felt)",
                        "offset": 0
                    }
                },
                "size": 6,
                "type": "struct"
            },
            "__wrappers__.test_long_retdata_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.test_long_retdata_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.test_long_retdata_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.test_long_retdata_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.test_long_retdata_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.test_nested_library_call": {
                "decorators": [
                    "external"
                ],
                "pc": 817,
                "type": "function"
            },
            "__wrappers__.test_nested_library_call.Args": {
                "full_name": "__wrappers__.test_nested_library_call.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.test_nested_library_call.ImplicitArgs": {
                "full_name": "__wrappers__.test_nested_library_call.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.test_nested_library_call.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: felt, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.test_nested_library_call.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.test_nested_library_call.__wrapped_func": {
                "destination": "__main__.test_nested_library_call",
                "type": "alias"
            },
            "__wrappers__.test_nested_library_call_encode_return": {
                "decorators": [],
                "pc": 808,
                "type": "function"
            },
            "__wrappers__.test_nested_library_call_encode_return.Args": {
                "full_name": "__wrappers__.test_nested_library_call_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(result: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.test_nested_library_call_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.test_nested_library_call_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.test_nested_library_call_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.test_nested_library_call_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.test_nested_library_call_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.test_replace_class": {
                "decorators": [
                    "external"
                ],
                "pc": 887,
                "type": "function"
            },
            "__wrappers__.test_replace_class.Args": {
                "full_name": "__wrappers__.test_replace_class.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.test_replace_class.ImplicitArgs": {
                "full_name": "__wrappers__.test_replace_class.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.test_replace_class.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: felt, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.test_replace_class.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.test_replace_class.__wrapped_func": {
                "destination": "__main__.test_replace_class",
                "type": "alias"
            },
            "__wrappers__.test_replace_class_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.test_storage_read_write": {
                "decorators": [
                    "external"
                ],
                "pc": 615,
                "type": "function"
            },
            "__wrappers__.test_storage_read_write.Args": {
                "full_name": "__wrappers__.test_storage_read_write.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.test_storage_read_write.ImplicitArgs": {
                "full_name": "__wrappers__.test_storage_read_write.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.test_storage_read_write.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: felt, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.test_storage_read_write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.test_storage_read_write.__wrapped_func": {
                "destination": "__main__.test_storage_read_write",
                "type": "alias"
            },
            "__wrappers__.test_storage_read_write_encode_return": {
                "decorators": [],
                "pc": 606,
                "type": "function"
            },
            "__wrappers__.test_storage_read_write_encode_return.Args": {
                "full_name": "__wrappers__.test_storage_read_write_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(result: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.test_storage_read_write_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.test_storage_read_write_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.test_storage_read_write_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.test_storage_read_write_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.test_storage_read_write_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.test_storage_var": {
                "decorators": [
                    "external"
                ],
                "pc": 975,
                "type": "function"
            },
            "__wrappers__.test_storage_var.Args": {
                "full_name": "__wrappers__.test_storage_var.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.test_storage_var.ImplicitArgs": {
                "full_name": "__wrappers__.test_storage_var.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.test_storage_var.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.test_storage_var.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.test_storage_var.__wrapped_func": {
                "destination": "__main__.test_storage_var",
                "type": "alias"
            },
            "__wrappers__.test_storage_var_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.test_tx_version": {
                "decorators": [
                    "external"
                ],
                "pc": 1389,
                "type": "function"
            },
            "__wrappers__.test_tx_version.Args": {
                "full_name": "__wrappers__.test_tx_version.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.test_tx_version.ImplicitArgs": {
                "full_name": "__wrappers__.test_tx_version.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.test_tx_version.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: felt, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.test_tx_version.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.test_tx_version.__wrapped_func": {
                "destination": "__main__.test_tx_version",
                "type": "alias"
            },
            "__wrappers__.test_tx_version_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.test_write_and_transfer": {
                "decorators": [
                    "external"
                ],
                "pc": 1225,
                "type": "function"
            },
            "__wrappers__.test_write_and_transfer.Args": {
                "full_name": "__wrappers__.test_write_and_transfer.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.test_write_and_transfer.ImplicitArgs": {
                "full_name": "__wrappers__.test_write_and_transfer.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.test_write_and_transfer.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: felt, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.test_write_and_transfer.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.test_write_and_transfer.__wrapped_func": {
                "destination": "__main__.test_write_and_transfer",
                "type": "alias"
            },
            "__wrappers__.test_write_and_transfer_encode_return": {
                "decorators": [],
                "pc": 1206,
                "type": "function"
            },
            "__wrappers__.test_write_and_transfer_encode_return.Args": {
                "full_name": "__wrappers__.test_write_and_transfer_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "ret_value": {
                        "cairo_type": "(retdata_len: felt, retdata: felt*)",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__wrappers__.test_write_and_transfer_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.test_write_and_transfer_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.test_write_and_transfer_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.test_write_and_transfer_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 3
            },
            "__wrappers__.test_write_and_transfer_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.with_arg": {
                "decorators": [
                    "external"
                ],
                "pc": 501,
                "type": "function"
            },
            "__wrappers__.with_arg.Args": {
                "full_name": "__wrappers__.with_arg.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.with_arg.ImplicitArgs": {
                "full_name": "__wrappers__.with_arg.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.with_arg.Return": {
                "cairo_type": "(syscall_ptr: felt, pedersen_ptr: felt, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.with_arg.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.with_arg.__wrapped_func": {
                "destination": "__main__.with_arg",
                "type": "alias"
            },
            "__wrappers__.with_arg_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.without_arg": {
                "decorators": [
                    "external"
                ],
                "pc": 484,
                "type": "function"
            },
            "__wrappers__.without_arg.Args": {
                "full_name": "__wrappers__.without_arg.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.without_arg.ImplicitArgs": {
                "full_name": "__wrappers__.without_arg.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.without_arg.Return": {
                "cairo_type": "(syscall_ptr: felt, pedersen_ptr: felt, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.without_arg.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.without_arg.__wrapped_func": {
                "destination": "__main__.without_arg",
                "type": "alias"
            },
            "__wrappers__.without_arg_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.write_a_lot": {
                "decorators": [
                    "external"
                ],
                "pc": 649,
                "type": "function"
            },
            "__wrappers__.write_a_lot.Args": {
                "full_name": "__wrappers__.write_a_lot.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.write_a_lot.ImplicitArgs": {
                "full_name": "__wrappers__.write_a_lot.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.write_a_lot.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: felt, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.write_a_lot.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.write_a_lot.__wrapped_func": {
                "destination": "__main__.write_a_lot",
                "type": "alias"
            },
            "__wrappers__.write_a_lot_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.write_and_revert": {
                "decorators": [
                    "external"
                ],
                "pc": 679,
                "type": "function"
            },
            "__wrappers__.write_and_revert.Args": {
                "full_name": "__wrappers__.write_and_revert.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.write_and_revert.ImplicitArgs": {
                "full_name": "__wrappers__.write_and_revert.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.write_and_revert.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: felt, range_check_ptr: felt, bitwise_ptr: felt, ec_op_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.write_and_revert.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.write_and_revert.__wrapped_func": {
                "destination": "__main__.write_and_revert",
                "type": "alias"
            },
            "__wrappers__.write_and_revert_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.xor_counters": {
                "decorators": [
                    "external"
                ],
                "pc": 1596,
                "type": "function"
            },
            "__wrappers__.xor_counters.Args": {
                "full_name": "__wrappers__.xor_counters.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.xor_counters.ImplicitArgs": {
                "full_name": "__wrappers__.xor_counters.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.xor_counters.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: starkware.cairo.common.cairo_builtins.BitwiseBuiltin*, ec_op_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.xor_counters.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.xor_counters.__wrapped_func": {
                "destination": "__main__.xor_counters",
                "type": "alias"
            },
            "__wrappers__.xor_counters_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "starkware.cairo.common.alloc.alloc": {
                "decorators": [],
                "pc": 0,
                "type": "function"
            },
            "starkware.cairo.common.alloc.alloc.Args": {
                "full_name": "starkware.cairo.common.alloc.alloc.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.alloc.alloc.ImplicitArgs": {
                "full_name": "starkware.cairo.common.alloc.alloc.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.alloc.alloc.Return": {
                "cairo_type": "(ptr: felt*)",
                "type": "type_definition"
            },
            "starkware.cairo.common.alloc.alloc.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.bitwise.ALL_ONES": {
                "type": "const",
                "value": -106710729501573572985208420194530329073740042555888586719234
            },
            "starkware.cairo.common.bitwise.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "starkware.cairo.common.bitwise.bitwise_xor": {
                "decorators": [],
                "pc": 185,
                "type": "function"
            },
            "starkware.cairo.common.bitwise.bitwise_xor.Args": {
                "full_name": "starkware.cairo.common.bitwise.bitwise_xor.Args",
                "members": {
                    "x": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "y": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.bitwise.bitwise_xor.ImplicitArgs": {
                "full_name": "starkware.cairo.common.bitwise.bitwise_xor.ImplicitArgs",
                "members": {
                    "bitwise_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.bitwise.bitwise_xor.Return": {
                "cairo_type": "(x_xor_y: felt)",
                "type": "type_definition"
            },
            "starkware.cairo.common.bitwise.bitwise_xor.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.bool.FALSE": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.bool.TRUE": {
                "type": "const",
                "value": 1
            },
            "starkware.cairo.common.cairo_builtins.BitwiseBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "members": {
                    "x": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "x_and_y": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "x_or_y": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "x_xor_y": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "y": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.EcOpBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.EcOpBuiltin",
                "members": {
                    "m": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "p": {
                        "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
                        "offset": 0
                    },
                    "q": {
                        "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
                        "offset": 2
                    },
                    "r": {
                        "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
                        "offset": 5
                    }
                },
                "size": 7,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.EcPoint": {
                "destination": "starkware.cairo.common.ec_point.EcPoint",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_builtins.HashBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "members": {
                    "result": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "x": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "y": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.KeccakBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.KeccakBuiltin",
                "members": {
                    "input": {
                        "cairo_type": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
                        "offset": 0
                    },
                    "output": {
                        "cairo_type": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
                        "offset": 8
                    }
                },
                "size": 16,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.KeccakBuiltinState": {
                "destination": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_builtins.PoseidonBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.PoseidonBuiltin",
                "members": {
                    "input": {
                        "cairo_type": "starkware.cairo.common.poseidon_state.PoseidonBuiltinState",
                        "offset": 0
                    },
                    "output": {
                        "cairo_type": "starkware.cairo.common.poseidon_state.PoseidonBuiltinState",
                        "offset": 3
                    }
                },
                "size": 6,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.PoseidonBuiltinState": {
                "destination": "starkware.cairo.common.poseidon_state.PoseidonBuiltinState",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_builtins.SignatureBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "members": {
                    "message": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "pub_key": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.dict_access.DictAccess": {
                "full_name": "starkware.cairo.common.dict_access.DictAccess",
                "members": {
                    "key": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "new_value": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "prev_value": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.ec.EcOpBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.EcOpBuiltin",
                "type": "alias"
            },
            "starkware.cairo.common.ec.EcPoint": {
                "destination": "starkware.cairo.common.ec_point.EcPoint",
                "type": "alias"
            },
            "starkware.cairo.common.ec.StarkCurve": {
                "type": "namespace"
            },
            "starkware.cairo.common.ec.StarkCurve.ALPHA": {
                "type": "const",
                "value": 1
            },
            "starkware.cairo.common.ec.StarkCurve.Args": {
                "full_name": "starkware.cairo.common.ec.StarkCurve.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.ec.StarkCurve.BETA": {
                "type": "const",
                "value": -476910135076337975234679399815567221425937815956490878998147463828055613816
            },
            "starkware.cairo.common.ec.StarkCurve.GEN_X": {
                "type": "const",
                "value": 874739451078007766457464989774322083649278607533249481151382481072868806602
            },
            "starkware.cairo.common.ec.StarkCurve.GEN_Y": {
                "type": "const",
                "value": 152666792071518830868575557812948353041420400780739481342941381225525861407
            },
            "starkware.cairo.common.ec.StarkCurve.ImplicitArgs": {
                "full_name": "starkware.cairo.common.ec.StarkCurve.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.ec.StarkCurve.ORDER": {
                "type": "const",
                "value": -96363463615509210819012598251359154898
            },
            "starkware.cairo.common.ec.StarkCurve.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.ec.StarkCurve.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.ec.ec_add": {
                "decorators": [],
                "pc": 214,
                "type": "function"
            },
            "starkware.cairo.common.ec.ec_add.Args": {
                "full_name": "starkware.cairo.common.ec.ec_add.Args",
                "members": {
                    "p": {
                        "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
                        "offset": 0
                    },
                    "q": {
                        "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
                        "offset": 2
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "starkware.cairo.common.ec.ec_add.ImplicitArgs": {
                "full_name": "starkware.cairo.common.ec.ec_add.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.ec.ec_add.Return": {
                "cairo_type": "(r: starkware.cairo.common.ec_point.EcPoint)",
                "type": "type_definition"
            },
            "starkware.cairo.common.ec.ec_add.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.ec.ec_double": {
                "decorators": [],
                "pc": 191,
                "type": "function"
            },
            "starkware.cairo.common.ec.ec_double.Args": {
                "full_name": "starkware.cairo.common.ec.ec_double.Args",
                "members": {
                    "p": {
                        "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.ec.ec_double.ImplicitArgs": {
                "full_name": "starkware.cairo.common.ec.ec_double.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.ec.ec_double.Return": {
                "cairo_type": "(r: starkware.cairo.common.ec_point.EcPoint)",
                "type": "type_definition"
            },
            "starkware.cairo.common.ec.ec_double.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.ec.ec_op": {
                "decorators": [],
                "pc": 251,
                "type": "function"
            },
            "starkware.cairo.common.ec.ec_op.Args": {
                "full_name": "starkware.cairo.common.ec.ec_op.Args",
                "members": {
                    "m": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "p": {
                        "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
                        "offset": 0
                    },
                    "q": {
                        "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
                        "offset": 3
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "starkware.cairo.common.ec.ec_op.ImplicitArgs": {
                "full_name": "starkware.cairo.common.ec.ec_op.ImplicitArgs",
                "members": {
                    "ec_op_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.EcOpBuiltin*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.ec.ec_op.Return": {
                "cairo_type": "(r: starkware.cairo.common.ec_point.EcPoint)",
                "type": "type_definition"
            },
            "starkware.cairo.common.ec.ec_op.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "starkware.cairo.common.ec.ec_op.m": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.ec.ec_op.m",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 23,
                            "offset": 0
                        },
                        "pc": 251,
                        "value": "[cast(fp + (-5), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.ec.ec_op.p": {
                "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
                "full_name": "starkware.cairo.common.ec.ec_op.p",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 23,
                            "offset": 0
                        },
                        "pc": 251,
                        "value": "[cast(fp + (-7), starkware.cairo.common.ec_point.EcPoint*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.ec.ec_op.q": {
                "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
                "full_name": "starkware.cairo.common.ec.ec_op.q",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 23,
                            "offset": 0
                        },
                        "pc": 251,
                        "value": "[cast(fp + (-4), starkware.cairo.common.ec_point.EcPoint*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.ec.ec_op.s": {
                "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
                "full_name": "starkware.cairo.common.ec.ec_op.s",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 23,
                            "offset": 2
                        },
                        "pc": 259,
                        "value": "[cast(fp, starkware.cairo.common.ec_point.EcPoint*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.ec.is_quad_residue": {
                "destination": "starkware.cairo.common.math.is_quad_residue",
                "type": "alias"
            },
            "starkware.cairo.common.ec_point.EcPoint": {
                "full_name": "starkware.cairo.common.ec_point.EcPoint",
                "members": {
                    "x": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "y": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.hash.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "starkware.cairo.common.hash.hash2": {
                "decorators": [],
                "pc": 3,
                "type": "function"
            },
            "starkware.cairo.common.hash.hash2.Args": {
                "full_name": "starkware.cairo.common.hash.hash2.Args",
                "members": {
                    "x": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "y": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.hash.hash2.ImplicitArgs": {
                "full_name": "starkware.cairo.common.hash.hash2.ImplicitArgs",
                "members": {
                    "hash_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.hash.hash2.Return": {
                "cairo_type": "(result: felt)",
                "type": "type_definition"
            },
            "starkware.cairo.common.hash.hash2.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.hash_state.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "starkware.cairo.common.hash_state.HashState": {
                "full_name": "starkware.cairo.common.hash_state.HashState",
                "members": {
                    "current_hash": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "n_words": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.hash_state.get_fp_and_pc": {
                "destination": "starkware.cairo.common.registers.get_fp_and_pc",
                "type": "alias"
            },
            "starkware.cairo.common.hash_state.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "starkware.cairo.common.hash_state.hash_felts": {
                "decorators": [],
                "pc": 375,
                "type": "function"
            },
            "starkware.cairo.common.hash_state.hash_felts.Args": {
                "full_name": "starkware.cairo.common.hash_state.hash_felts.Args",
                "members": {
                    "data": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "length": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.hash_state.hash_felts.ImplicitArgs": {
                "full_name": "starkware.cairo.common.hash_state.hash_felts.ImplicitArgs",
                "members": {
                    "hash_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.hash_state.hash_felts.Return": {
                "cairo_type": "(hash: felt)",
                "type": "type_definition"
            },
            "starkware.cairo.common.hash_state.hash_felts.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.hash_state.hash_felts_no_padding": {
                "decorators": [],
                "pc": 350,
                "type": "function"
            },
            "starkware.cairo.common.hash_state.hash_felts_no_padding.Args": {
                "full_name": "starkware.cairo.common.hash_state.hash_felts_no_padding.Args",
                "members": {
                    "data_length": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "data_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "initial_hash": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.hash_state.hash_felts_no_padding.ImplicitArgs": {
                "full_name": "starkware.cairo.common.hash_state.hash_felts_no_padding.ImplicitArgs",
                "members": {
                    "hash_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.hash_state.hash_felts_no_padding.LoopLocals": {
                "full_name": "starkware.cairo.common.hash_state.hash_felts_no_padding.LoopLocals",
                "members": {
                    "cur_hash": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "data_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "hash_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.hash_state.hash_felts_no_padding.Return": {
                "cairo_type": "(hash: felt)",
                "type": "type_definition"
            },
            "starkware.cairo.common.hash_state.hash_felts_no_padding.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "starkware.cairo.common.hash_state.hash_felts_no_padding.hash_loop": {
                "pc": 363,
                "type": "label"
            },
            "starkware.cairo.common.hash_state.hash_finalize": {
                "decorators": [],
                "pc": 344,
                "type": "function"
            },
            "starkware.cairo.common.hash_state.hash_finalize.Args": {
                "full_name": "starkware.cairo.common.hash_state.hash_finalize.Args",
                "members": {
                    "hash_state_ptr": {
                        "cairo_type": "starkware.cairo.common.hash_state.HashState*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.hash_state.hash_finalize.ImplicitArgs": {
                "full_name": "starkware.cairo.common.hash_state.hash_finalize.ImplicitArgs",
                "members": {
                    "hash_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.hash_state.hash_finalize.Return": {
                "cairo_type": "(hash: felt)",
                "type": "type_definition"
            },
            "starkware.cairo.common.hash_state.hash_finalize.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.hash_state.hash_init": {
                "decorators": [],
                "pc": 291,
                "type": "function"
            },
            "starkware.cairo.common.hash_state.hash_init.Args": {
                "full_name": "starkware.cairo.common.hash_state.hash_init.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.hash_state.hash_init.ImplicitArgs": {
                "full_name": "starkware.cairo.common.hash_state.hash_init.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.hash_state.hash_init.Return": {
                "cairo_type": "(hash_state_ptr: starkware.cairo.common.hash_state.HashState*)",
                "type": "type_definition"
            },
            "starkware.cairo.common.hash_state.hash_init.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "starkware.cairo.common.hash_state.hash_update": {
                "decorators": [],
                "pc": 301,
                "type": "function"
            },
            "starkware.cairo.common.hash_state.hash_update.Args": {
                "full_name": "starkware.cairo.common.hash_state.hash_update.Args",
                "members": {
                    "data_length": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "data_ptr": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "hash_state_ptr": {
                        "cairo_type": "starkware.cairo.common.hash_state.HashState*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.hash_state.hash_update.ImplicitArgs": {
                "full_name": "starkware.cairo.common.hash_state.hash_update.ImplicitArgs",
                "members": {
                    "hash_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.hash_state.hash_update.Return": {
                "cairo_type": "(new_hash_state_ptr: starkware.cairo.common.hash_state.HashState*)",
                "type": "type_definition"
            },
            "starkware.cairo.common.hash_state.hash_update.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "starkware.cairo.common.hash_state.hash_update_single": {
                "decorators": [],
                "pc": 317,
                "type": "function"
            },
            "starkware.cairo.common.hash_state.hash_update_single.Args": {
                "full_name": "starkware.cairo.common.hash_state.hash_update_single.Args",
                "members": {
                    "hash_state_ptr": {
                        "cairo_type": "starkware.cairo.common.hash_state.HashState*",
                        "offset": 0
                    },
                    "item": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.hash_state.hash_update_single.ImplicitArgs": {
                "full_name": "starkware.cairo.common.hash_state.hash_update_single.ImplicitArgs",
                "members": {
                    "hash_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.hash_state.hash_update_single.Return": {
                "cairo_type": "(new_hash_state_ptr: starkware.cairo.common.hash_state.HashState*)",
                "type": "type_definition"
            },
            "starkware.cairo.common.hash_state.hash_update_single.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "starkware.cairo.common.hash_state.hash_update_with_hashchain": {
                "decorators": [],
                "pc": 333,
                "type": "function"
            },
            "starkware.cairo.common.hash_state.hash_update_with_hashchain.Args": {
                "full_name": "starkware.cairo.common.hash_state.hash_update_with_hashchain.Args",
                "members": {
                    "data_length": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "data_ptr": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "hash_state_ptr": {
                        "cairo_type": "starkware.cairo.common.hash_state.HashState*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.hash_state.hash_update_with_hashchain.ImplicitArgs": {
                "full_name": "starkware.cairo.common.hash_state.hash_update_with_hashchain.ImplicitArgs",
                "members": {
                    "hash_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.hash_state.hash_update_with_hashchain.Return": {
                "cairo_type": "(new_hash_state_ptr: starkware.cairo.common.hash_state.HashState*)",
                "type": "type_definition"
            },
            "starkware.cairo.common.hash_state.hash_update_with_hashchain.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.keccak_state.KeccakBuiltinState": {
                "full_name": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
                "members": {
                    "s0": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "s1": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "s2": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "s3": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "s4": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "s5": {
                        "cairo_type": "felt",
                        "offset": 5
                    },
                    "s6": {
                        "cairo_type": "felt",
                        "offset": 6
                    },
                    "s7": {
                        "cairo_type": "felt",
                        "offset": 7
                    }
                },
                "size": 8,
                "type": "struct"
            },
            "starkware.cairo.common.math.FALSE": {
                "destination": "starkware.cairo.common.bool.FALSE",
                "type": "alias"
            },
            "starkware.cairo.common.math.TRUE": {
                "destination": "starkware.cairo.common.bool.TRUE",
                "type": "alias"
            },
            "starkware.cairo.common.math.assert_250_bit": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 132,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_250_bit.Args": {
                "full_name": "starkware.cairo.common.math.assert_250_bit.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_250_bit.HIGH_BOUND": {
                "type": "const",
                "value": 5316911983139663491615228241121378304
            },
            "starkware.cairo.common.math.assert_250_bit.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_250_bit.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_250_bit.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_250_bit.SHIFT": {
                "type": "const",
                "value": 340282366920938463463374607431768211456
            },
            "starkware.cairo.common.math.assert_250_bit.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_250_bit.UPPER_BOUND": {
                "type": "const",
                "value": 1809251394333065553493296640760748560207343510400633813116524750123642650624
            },
            "starkware.cairo.common.math.assert_250_bit.high": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_250_bit.high",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 17,
                            "offset": 0
                        },
                        "pc": 132,
                        "value": "[cast([fp + (-4)] + 1, felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_250_bit.low": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_250_bit.low",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 17,
                            "offset": 0
                        },
                        "pc": 132,
                        "value": "[cast([fp + (-4)], felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_250_bit.value": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_250_bit.value",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 17,
                            "offset": 0
                        },
                        "pc": 132,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.memcpy.memcpy": {
                "decorators": [],
                "pc": 9,
                "type": "function"
            },
            "starkware.cairo.common.memcpy.memcpy.Args": {
                "full_name": "starkware.cairo.common.memcpy.memcpy.Args",
                "members": {
                    "dst": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "len": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "src": {
                        "cairo_type": "felt*",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.memcpy.memcpy.ImplicitArgs": {
                "full_name": "starkware.cairo.common.memcpy.memcpy.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.memcpy.memcpy.LoopFrame": {
                "full_name": "starkware.cairo.common.memcpy.memcpy.LoopFrame",
                "members": {
                    "dst": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "src": {
                        "cairo_type": "felt*",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.memcpy.memcpy.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.memcpy.memcpy.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.memcpy.memcpy.continue_copying": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.memcpy.memcpy.continue_copying",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 2,
                            "offset": 3
                        },
                        "pc": 16,
                        "value": "[cast(ap, felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.memcpy.memcpy.len": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.memcpy.memcpy.len",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 2,
                            "offset": 0
                        },
                        "pc": 9,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.memcpy.memcpy.loop": {
                "pc": 14,
                "type": "label"
            },
            "starkware.cairo.common.poseidon_state.PoseidonBuiltinState": {
                "full_name": "starkware.cairo.common.poseidon_state.PoseidonBuiltinState",
                "members": {
                    "s0": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "s1": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "s2": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.registers.get_ap": {
                "destination": "starkware.cairo.lang.compiler.lib.registers.get_ap",
                "type": "alias"
            },
            "starkware.cairo.common.registers.get_fp_and_pc": {
                "destination": "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc",
                "type": "alias"
            },
            "starkware.cairo.lang.compiler.lib.registers.get_ap": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 25,
                "type": "function"
            },
            "starkware.cairo.lang.compiler.lib.registers.get_ap.Args": {
                "full_name": "starkware.cairo.lang.compiler.lib.registers.get_ap.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.lang.compiler.lib.registers.get_ap.ImplicitArgs": {
                "full_name": "starkware.cairo.lang.compiler.lib.registers.get_ap.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.lang.compiler.lib.registers.get_ap.Return": {
                "cairo_type": "(ap_val: felt*)",
                "type": "type_definition"
            },
            "starkware.cairo.lang.compiler.lib.registers.get_ap.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc": {
                "decorators": [],
                "pc": 24,
                "type": "function"
            },
            "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.Args": {
                "full_name": "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.ImplicitArgs": {
                "full_name": "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.Return": {
                "cairo_type": "(fp_val: felt*, pc_val: felt*)",
                "type": "type_definition"
            },
            "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.messages.SEND_MESSAGE_TO_L1_SELECTOR": {
                "destination": "starkware.starknet.common.syscalls.SEND_MESSAGE_TO_L1_SELECTOR",
                "type": "alias"
            },
            "starkware.starknet.common.messages.SendMessageToL1SysCall": {
                "destination": "starkware.starknet.common.syscalls.SendMessageToL1SysCall",
                "type": "alias"
            },
            "starkware.starknet.common.messages.send_message_to_l1": {
                "decorators": [],
                "pc": 282,
                "type": "function"
            },
            "starkware.starknet.common.messages.send_message_to_l1.Args": {
                "full_name": "starkware.starknet.common.messages.send_message_to_l1.Args",
                "members": {
                    "payload": {
                        "cairo_type": "felt*",
                        "offset": 2
                    },
                    "payload_size": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "to_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.starknet.common.messages.send_message_to_l1.ImplicitArgs": {
                "full_name": "starkware.starknet.common.messages.send_message_to_l1.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.messages.send_message_to_l1.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.starknet.common.messages.send_message_to_l1.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.messages.send_message_to_l1.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.messages.send_message_to_l1.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 26,
                            "offset": 0
                        },
                        "pc": 282,
                        "value": "[cast(fp + (-6), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 26,
                            "offset": 1
                        },
                        "pc": 288,
                        "value": "cast([fp + (-6)] + 4, felt*)"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.storage.ADDR_BOUND": {
                "type": "const",
                "value": -106710729501573572985208420194530329073740042555888586719489
            },
            "starkware.starknet.common.storage.MAX_STORAGE_ITEM_SIZE": {
                "type": "const",
                "value": 256
            },
            "starkware.starknet.common.storage.assert_250_bit": {
                "destination": "starkware.cairo.common.math.assert_250_bit",
                "type": "alias"
            },
            "starkware.starknet.common.storage.normalize_address": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 145,
                "type": "function"
            },
            "starkware.starknet.common.storage.normalize_address.Args": {
                "full_name": "starkware.starknet.common.storage.normalize_address.Args",
                "members": {
                    "addr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.storage.normalize_address.ImplicitArgs": {
                "full_name": "starkware.starknet.common.storage.normalize_address.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.storage.normalize_address.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "starkware.starknet.common.storage.normalize_address.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.storage.normalize_address.addr": {
                "cairo_type": "felt",
                "full_name": "starkware.starknet.common.storage.normalize_address.addr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 18,
                            "offset": 0
                        },
                        "pc": 145,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.storage.normalize_address.is_250": {
                "cairo_type": "felt",
                "full_name": "starkware.starknet.common.storage.normalize_address.is_250",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 18,
                            "offset": 2
                        },
                        "pc": 165,
                        "value": "[cast(ap + (-1), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.storage.normalize_address.is_small": {
                "cairo_type": "felt",
                "full_name": "starkware.starknet.common.storage.normalize_address.is_small",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 18,
                            "offset": 1
                        },
                        "pc": 147,
                        "value": "[cast(ap + (-1), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.CALL_CONTRACT_SELECTOR": {
                "type": "const",
                "value": 20853273475220472486191784820
            },
            "starkware.starknet.common.syscalls.CallContract": {
                "full_name": "starkware.starknet.common.syscalls.CallContract",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.CallContractRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.CallContractResponse",
                        "offset": 5
                    }
                },
                "size": 7,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.CallContractRequest": {
                "full_name": "starkware.starknet.common.syscalls.CallContractRequest",
                "members": {
                    "calldata": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "calldata_size": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "function_selector": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.CallContractResponse": {
                "full_name": "starkware.starknet.common.syscalls.CallContractResponse",
                "members": {
                    "retdata": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "retdata_size": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.DELEGATE_CALL_SELECTOR": {
                "type": "const",
                "value": 21167594061783206823196716140
            },
            "starkware.starknet.common.syscalls.DELEGATE_L1_HANDLER_SELECTOR": {
                "type": "const",
                "value": 23274015802972845247556842986379118667122
            },
            "starkware.starknet.common.syscalls.DEPLOY_SELECTOR": {
                "type": "const",
                "value": 75202468540281
            },
            "starkware.starknet.common.syscalls.Deploy": {
                "full_name": "starkware.starknet.common.syscalls.Deploy",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.DeployRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.DeployResponse",
                        "offset": 6
                    }
                },
                "size": 9,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.DeployRequest": {
                "full_name": "starkware.starknet.common.syscalls.DeployRequest",
                "members": {
                    "class_hash": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "constructor_calldata": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "constructor_calldata_size": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "contract_address_salt": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "deploy_from_zero": {
                        "cairo_type": "felt",
                        "offset": 5
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 6,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.DeployResponse": {
                "full_name": "starkware.starknet.common.syscalls.DeployResponse",
                "members": {
                    "constructor_retdata": {
                        "cairo_type": "felt*",
                        "offset": 2
                    },
                    "constructor_retdata_size": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.DictAccess": {
                "destination": "starkware.cairo.common.dict_access.DictAccess",
                "type": "alias"
            },
            "starkware.starknet.common.syscalls.EMIT_EVENT_SELECTOR": {
                "type": "const",
                "value": 1280709301550335749748
            },
            "starkware.starknet.common.syscalls.EmitEvent": {
                "full_name": "starkware.starknet.common.syscalls.EmitEvent",
                "members": {
                    "data": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "data_len": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "keys": {
                        "cairo_type": "felt*",
                        "offset": 2
                    },
                    "keys_len": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GET_BLOCK_NUMBER_SELECTOR": {
                "type": "const",
                "value": 1448089106835523001438702345020786
            },
            "starkware.starknet.common.syscalls.GET_BLOCK_TIMESTAMP_SELECTOR": {
                "type": "const",
                "value": 24294903732626645868215235778792757751152
            },
            "starkware.starknet.common.syscalls.GET_CALLER_ADDRESS_SELECTOR": {
                "type": "const",
                "value": 94901967781393078444254803017658102643
            },
            "starkware.starknet.common.syscalls.GET_CONTRACT_ADDRESS_SELECTOR": {
                "type": "const",
                "value": 6219495360805491471215297013070624192820083
            },
            "starkware.starknet.common.syscalls.GET_SEQUENCER_ADDRESS_SELECTOR": {
                "type": "const",
                "value": 1592190833581991703053805829594610833820054387
            },
            "starkware.starknet.common.syscalls.GET_TX_INFO_SELECTOR": {
                "type": "const",
                "value": 1317029390204112103023
            },
            "starkware.starknet.common.syscalls.GET_TX_SIGNATURE_SELECTOR": {
                "type": "const",
                "value": 1448089128652340074717162277007973
            },
            "starkware.starknet.common.syscalls.GetBlockNumber": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockNumber",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetBlockNumberRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetBlockNumberResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockNumberRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockNumberRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockNumberResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockNumberResponse",
                "members": {
                    "block_number": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockTimestamp": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockTimestamp",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetBlockTimestampRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetBlockTimestampResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockTimestampRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockTimestampRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockTimestampResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockTimestampResponse",
                "members": {
                    "block_timestamp": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetCallerAddress": {
                "full_name": "starkware.starknet.common.syscalls.GetCallerAddress",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetCallerAddressRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetCallerAddressResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetCallerAddressRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetCallerAddressRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetCallerAddressResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetCallerAddressResponse",
                "members": {
                    "caller_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetContractAddress": {
                "full_name": "starkware.starknet.common.syscalls.GetContractAddress",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetContractAddressRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetContractAddressResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetContractAddressRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetContractAddressRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetContractAddressResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetContractAddressResponse",
                "members": {
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetSequencerAddress": {
                "full_name": "starkware.starknet.common.syscalls.GetSequencerAddress",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetSequencerAddressRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetSequencerAddressResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetSequencerAddressRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetSequencerAddressRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetSequencerAddressResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetSequencerAddressResponse",
                "members": {
                    "sequencer_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxInfo": {
                "full_name": "starkware.starknet.common.syscalls.GetTxInfo",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetTxInfoRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetTxInfoResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxInfoRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetTxInfoRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxInfoResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetTxInfoResponse",
                "members": {
                    "tx_info": {
                        "cairo_type": "starkware.starknet.common.syscalls.TxInfo*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxSignature": {
                "full_name": "starkware.starknet.common.syscalls.GetTxSignature",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetTxSignatureRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetTxSignatureResponse",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxSignatureRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetTxSignatureRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxSignatureResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetTxSignatureResponse",
                "members": {
                    "signature": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "signature_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.LIBRARY_CALL_L1_HANDLER_SELECTOR": {
                "type": "const",
                "value": 436233452754198157705746250789557519228244616562
            },
            "starkware.starknet.common.syscalls.LIBRARY_CALL_SELECTOR": {
                "type": "const",
                "value": 92376026794327011772951660
            },
            "starkware.starknet.common.syscalls.LibraryCall": {
                "full_name": "starkware.starknet.common.syscalls.LibraryCall",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.LibraryCallRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.CallContractResponse",
                        "offset": 5
                    }
                },
                "size": 7,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.LibraryCallRequest": {
                "full_name": "starkware.starknet.common.syscalls.LibraryCallRequest",
                "members": {
                    "calldata": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "calldata_size": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "class_hash": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "function_selector": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.REPLACE_CLASS_SELECTOR": {
                "type": "const",
                "value": 25500403217443378527601783667
            },
            "starkware.starknet.common.syscalls.ReplaceClass": {
                "full_name": "starkware.starknet.common.syscalls.ReplaceClass",
                "members": {
                    "class_hash": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.SEND_MESSAGE_TO_L1_SELECTOR": {
                "type": "const",
                "value": 433017908768303439907196859243777073
            },
            "starkware.starknet.common.syscalls.STORAGE_READ_SELECTOR": {
                "type": "const",
                "value": 100890693370601760042082660
            },
            "starkware.starknet.common.syscalls.STORAGE_WRITE_SELECTOR": {
                "type": "const",
                "value": 25828017502874050592466629733
            },
            "starkware.starknet.common.syscalls.SendMessageToL1SysCall": {
                "full_name": "starkware.starknet.common.syscalls.SendMessageToL1SysCall",
                "members": {
                    "payload_ptr": {
                        "cairo_type": "felt*",
                        "offset": 3
                    },
                    "payload_size": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "to_address": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.StorageRead": {
                "full_name": "starkware.starknet.common.syscalls.StorageRead",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.StorageReadRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.StorageReadResponse",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.StorageReadRequest": {
                "full_name": "starkware.starknet.common.syscalls.StorageReadRequest",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.StorageReadResponse": {
                "full_name": "starkware.starknet.common.syscalls.StorageReadResponse",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.StorageWrite": {
                "full_name": "starkware.starknet.common.syscalls.StorageWrite",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.TxInfo": {
                "full_name": "starkware.starknet.common.syscalls.TxInfo",
                "members": {
                    "account_contract_address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "chain_id": {
                        "cairo_type": "felt",
                        "offset": 6
                    },
                    "max_fee": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "nonce": {
                        "cairo_type": "felt",
                        "offset": 7
                    },
                    "signature": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "signature_len": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "transaction_hash": {
                        "cairo_type": "felt",
                        "offset": 5
                    },
                    "version": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 8,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.call_contract": {
                "decorators": [],
                "pc": 30,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.call_contract.Args": {
                "full_name": "starkware.starknet.common.syscalls.call_contract.Args",
                "members": {
                    "calldata": {
                        "cairo_type": "felt*",
                        "offset": 3
                    },
                    "calldata_size": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "function_selector": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.call_contract.ImplicitArgs": {
                "full_name": "starkware.starknet.common.syscalls.call_contract.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.call_contract.Return": {
                "cairo_type": "(retdata_size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.call_contract.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.syscalls.call_contract.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.call_contract.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 5,
                            "offset": 0
                        },
                        "pc": 30,
                        "value": "[cast(fp + (-7), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 5,
                            "offset": 1
                        },
                        "pc": 37,
                        "value": "cast([fp + (-7)] + 7, felt*)"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.deploy": {
                "decorators": [],
                "pc": 54,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.deploy.Args": {
                "full_name": "starkware.starknet.common.syscalls.deploy.Args",
                "members": {
                    "class_hash": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "constructor_calldata": {
                        "cairo_type": "felt*",
                        "offset": 3
                    },
                    "constructor_calldata_size": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "contract_address_salt": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "deploy_from_zero": {
                        "cairo_type": "felt",
                        "offset": 4
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.deploy.ImplicitArgs": {
                "full_name": "starkware.starknet.common.syscalls.deploy.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.deploy.Return": {
                "cairo_type": "(contract_address: felt)",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.deploy.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.syscalls.deploy.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.deploy.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 7,
                            "offset": 0
                        },
                        "pc": 54,
                        "value": "[cast(fp + (-8), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 7,
                            "offset": 1
                        },
                        "pc": 62,
                        "value": "cast([fp + (-8)] + 9, felt*)"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.get_block_number": {
                "decorators": [],
                "pc": 80,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.get_block_number.Args": {
                "full_name": "starkware.starknet.common.syscalls.get_block_number.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.get_block_number.ImplicitArgs": {
                "full_name": "starkware.starknet.common.syscalls.get_block_number.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.get_block_number.Return": {
                "cairo_type": "(block_number: felt)",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.get_block_number.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.syscalls.get_block_number.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.get_block_number.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 10,
                            "offset": 0
                        },
                        "pc": 80,
                        "value": "[cast(fp + (-3), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 10,
                            "offset": 1
                        },
                        "pc": 83,
                        "value": "cast([fp + (-3)] + 2, felt*)"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.get_block_timestamp": {
                "decorators": [],
                "pc": 87,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.get_block_timestamp.Args": {
                "full_name": "starkware.starknet.common.syscalls.get_block_timestamp.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.get_block_timestamp.ImplicitArgs": {
                "full_name": "starkware.starknet.common.syscalls.get_block_timestamp.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.get_block_timestamp.Return": {
                "cairo_type": "(block_timestamp: felt)",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.get_block_timestamp.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.syscalls.get_block_timestamp.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.get_block_timestamp.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 11,
                            "offset": 0
                        },
                        "pc": 87,
                        "value": "[cast(fp + (-3), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 11,
                            "offset": 1
                        },
                        "pc": 90,
                        "value": "cast([fp + (-3)] + 2, felt*)"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.get_caller_address": {
                "decorators": [],
                "pc": 66,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.get_caller_address.Args": {
                "full_name": "starkware.starknet.common.syscalls.get_caller_address.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.get_caller_address.ImplicitArgs": {
                "full_name": "starkware.starknet.common.syscalls.get_caller_address.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.get_caller_address.Return": {
                "cairo_type": "(caller_address: felt)",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.get_caller_address.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.syscalls.get_caller_address.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.get_caller_address.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 8,
                            "offset": 0
                        },
                        "pc": 66,
                        "value": "[cast(fp + (-3), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 8,
                            "offset": 1
                        },
                        "pc": 69,
                        "value": "cast([fp + (-3)] + 2, felt*)"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.get_sequencer_address": {
                "decorators": [],
                "pc": 73,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.get_sequencer_address.Args": {
                "full_name": "starkware.starknet.common.syscalls.get_sequencer_address.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.get_sequencer_address.ImplicitArgs": {
                "full_name": "starkware.starknet.common.syscalls.get_sequencer_address.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.get_sequencer_address.Return": {
                "cairo_type": "(sequencer_address: felt)",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.get_sequencer_address.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.syscalls.get_sequencer_address.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.get_sequencer_address.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 9,
                            "offset": 0
                        },
                        "pc": 73,
                        "value": "[cast(fp + (-3), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 9,
                            "offset": 1
                        },
                        "pc": 76,
                        "value": "cast([fp + (-3)] + 2, felt*)"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.get_tx_info": {
                "decorators": [],
                "pc": 118,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.get_tx_info.Args": {
                "full_name": "starkware.starknet.common.syscalls.get_tx_info.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.get_tx_info.ImplicitArgs": {
                "full_name": "starkware.starknet.common.syscalls.get_tx_info.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.get_tx_info.Return": {
                "cairo_type": "(tx_info: starkware.starknet.common.syscalls.TxInfo*)",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.get_tx_info.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.syscalls.get_tx_info.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.get_tx_info.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 15,
                            "offset": 0
                        },
                        "pc": 118,
                        "value": "[cast(fp + (-3), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 15,
                            "offset": 1
                        },
                        "pc": 121,
                        "value": "cast([fp + (-3)] + 2, felt*)"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.get_tx_signature": {
                "decorators": [],
                "pc": 94,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.get_tx_signature.Args": {
                "full_name": "starkware.starknet.common.syscalls.get_tx_signature.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.get_tx_signature.ImplicitArgs": {
                "full_name": "starkware.starknet.common.syscalls.get_tx_signature.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.get_tx_signature.Return": {
                "cairo_type": "(signature_len: felt, signature: felt*)",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.get_tx_signature.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.syscalls.get_tx_signature.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.get_tx_signature.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 12,
                            "offset": 0
                        },
                        "pc": 94,
                        "value": "[cast(fp + (-3), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 12,
                            "offset": 1
                        },
                        "pc": 97,
                        "value": "cast([fp + (-3)] + 3, felt*)"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.library_call": {
                "decorators": [],
                "pc": 42,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.library_call.Args": {
                "full_name": "starkware.starknet.common.syscalls.library_call.Args",
                "members": {
                    "calldata": {
                        "cairo_type": "felt*",
                        "offset": 3
                    },
                    "calldata_size": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "class_hash": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "function_selector": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.library_call.ImplicitArgs": {
                "full_name": "starkware.starknet.common.syscalls.library_call.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.library_call.Return": {
                "cairo_type": "(retdata_size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.library_call.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.syscalls.library_call.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.library_call.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 6,
                            "offset": 0
                        },
                        "pc": 42,
                        "value": "[cast(fp + (-7), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 6,
                            "offset": 1
                        },
                        "pc": 49,
                        "value": "cast([fp + (-7)] + 7, felt*)"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.replace_class": {
                "decorators": [],
                "pc": 125,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.replace_class.Args": {
                "full_name": "starkware.starknet.common.syscalls.replace_class.Args",
                "members": {
                    "class_hash": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.replace_class.ImplicitArgs": {
                "full_name": "starkware.starknet.common.syscalls.replace_class.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.replace_class.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.replace_class.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.syscalls.replace_class.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.replace_class.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 16,
                            "offset": 0
                        },
                        "pc": 125,
                        "value": "[cast(fp + (-4), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 16,
                            "offset": 1
                        },
                        "pc": 129,
                        "value": "cast([fp + (-4)] + 2, felt*)"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.storage_read": {
                "decorators": [],
                "pc": 102,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.storage_read.Args": {
                "full_name": "starkware.starknet.common.syscalls.storage_read.Args",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.storage_read.ImplicitArgs": {
                "full_name": "starkware.starknet.common.syscalls.storage_read.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.storage_read.Return": {
                "cairo_type": "(value: felt)",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.storage_read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.syscalls.storage_read.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.storage_read.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 13,
                            "offset": 0
                        },
                        "pc": 102,
                        "value": "[cast(fp + (-4), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 13,
                            "offset": 1
                        },
                        "pc": 106,
                        "value": "cast([fp + (-4)] + 3, felt*)"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.storage_write": {
                "decorators": [],
                "pc": 110,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.storage_write.Args": {
                "full_name": "starkware.starknet.common.syscalls.storage_write.Args",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.storage_write.ImplicitArgs": {
                "full_name": "starkware.starknet.common.syscalls.storage_write.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.storage_write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.storage_write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.syscalls.storage_write.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.storage_write.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 14,
                            "offset": 0
                        },
                        "pc": 110,
                        "value": "[cast(fp + (-5), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 14,
                            "offset": 1
                        },
                        "pc": 115,
                        "value": "cast([fp + (-5)] + 3, felt*)"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.core.os.contract_address.contract_address.CONTRACT_ADDRESS_PREFIX": {
                "type": "const",
                "value": 523065374597054866729014270389667305596563390979550329787219
            },
            "starkware.starknet.core.os.contract_address.contract_address.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "starkware.starknet.core.os.contract_address.contract_address.get_contract_address": {
                "decorators": [],
                "pc": 386,
                "type": "function"
            },
            "starkware.starknet.core.os.contract_address.contract_address.get_contract_address.Args": {
                "full_name": "starkware.starknet.core.os.contract_address.contract_address.get_contract_address.Args",
                "members": {
                    "class_hash": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "constructor_calldata": {
                        "cairo_type": "felt*",
                        "offset": 3
                    },
                    "constructor_calldata_size": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "deployer_address": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "salt": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "starkware.starknet.core.os.contract_address.contract_address.get_contract_address.ImplicitArgs": {
                "full_name": "starkware.starknet.core.os.contract_address.contract_address.get_contract_address.ImplicitArgs",
                "members": {
                    "hash_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.core.os.contract_address.contract_address.get_contract_address.Return": {
                "cairo_type": "(contract_address: felt)",
                "type": "type_definition"
            },
            "starkware.starknet.core.os.contract_address.contract_address.get_contract_address.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.core.os.contract_address.contract_address.hash_finalize": {
                "destination": "starkware.cairo.common.hash_state.hash_finalize",
                "type": "alias"
            },
            "starkware.starknet.core.os.contract_address.contract_address.hash_init": {
                "destination": "starkware.cairo.common.hash_state.hash_init",
                "type": "alias"
            },
            "starkware.starknet.core.os.contract_address.contract_address.hash_update": {
                "destination": "starkware.cairo.common.hash_state.hash_update",
                "type": "alias"
            },
            "starkware.starknet.core.os.contract_address.contract_address.hash_update_single": {
                "destination": "starkware.cairo.common.hash_state.hash_update_single",
                "type": "alias"
            },
            "starkware.starknet.core.os.contract_address.contract_address.hash_update_with_hashchain": {
                "destination": "starkware.cairo.common.hash_state.hash_update_with_hashchain",
                "type": "alias"
            },
            "starkware.starknet.core.os.contract_address.contract_address.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            }
        },
        "main_scope": "__main__",
        "prime": "0x800000000000011000000000000000000000000000000000000000000000001",
        "reference_manager": {
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 2,
                        "offset": 0
                    },
                    "pc": 9,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 2,
                        "offset": 3
                    },
                    "pc": 16,
                    "value": "[cast(ap, felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 5,
                        "offset": 0
                    },
                    "pc": 30,
                    "value": "[cast(fp + (-7), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 6,
                        "offset": 0
                    },
                    "pc": 42,
                    "value": "[cast(fp + (-7), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 7,
                        "offset": 0
                    },
                    "pc": 54,
                    "value": "[cast(fp + (-8), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 8,
                        "offset": 0
                    },
                    "pc": 66,
                    "value": "[cast(fp + (-3), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 9,
                        "offset": 0
                    },
                    "pc": 73,
                    "value": "[cast(fp + (-3), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 10,
                        "offset": 0
                    },
                    "pc": 80,
                    "value": "[cast(fp + (-3), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 11,
                        "offset": 0
                    },
                    "pc": 87,
                    "value": "[cast(fp + (-3), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 12,
                        "offset": 0
                    },
                    "pc": 94,
                    "value": "[cast(fp + (-3), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 13,
                        "offset": 0
                    },
                    "pc": 102,
                    "value": "[cast(fp + (-4), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 14,
                        "offset": 0
                    },
                    "pc": 110,
                    "value": "[cast(fp + (-5), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 15,
                        "offset": 0
                    },
                    "pc": 118,
                    "value": "[cast(fp + (-3), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 16,
                        "offset": 0
                    },
                    "pc": 125,
                    "value": "[cast(fp + (-4), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 17,
                        "offset": 0
                    },
                    "pc": 132,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 17,
                        "offset": 0
                    },
                    "pc": 132,
                    "value": "[cast([fp + (-4)], felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 17,
                        "offset": 0
                    },
                    "pc": 132,
                    "value": "[cast([fp + (-4)] + 1, felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 18,
                        "offset": 0
                    },
                    "pc": 145,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 18,
                        "offset": 1
                    },
                    "pc": 147,
                    "value": "[cast(ap + (-1), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 18,
                        "offset": 2
                    },
                    "pc": 165,
                    "value": "[cast(ap + (-1), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 23,
                        "offset": 0
                    },
                    "pc": 251,
                    "value": "[cast(fp + (-7), starkware.cairo.common.ec_point.EcPoint*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 23,
                        "offset": 0
                    },
                    "pc": 251,
                    "value": "[cast(fp + (-5), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 23,
                        "offset": 0
                    },
                    "pc": 251,
                    "value": "[cast(fp + (-4), starkware.cairo.common.ec_point.EcPoint*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 23,
                        "offset": 2
                    },
                    "pc": 259,
                    "value": "[cast(fp, starkware.cairo.common.ec_point.EcPoint*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 26,
                        "offset": 0
                    },
                    "pc": 282,
                    "value": "[cast(fp + (-6), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 53,
                        "offset": 0
                    },
                    "pc": 573,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 53,
                        "offset": 1
                    },
                    "pc": 575,
                    "value": "[cast(fp, felt*)]"
                }
            ]
        }
    }
}
